{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"../actions/api\";\nconst initialState = {\n  topRaited: []\n};\nexport const titleSlice = createSlice({\n  name: \"titleBases\",\n  initialState,\n  reducers: {\n    titlesRecevied: (state, action) => {\n      let receviedTitles = [...action.payload];\n      state.topRaited = receviedTitles;\n    }\n  }\n});\nexport default titleSlice.reducer;\nexport const {\n  titlesRecevied\n} = titleSlice.actions;\nconst test = {\n  filterBy: \"name\",\n  generes: [],\n  titleType: {\n    id: 12,\n    name: \"OVA\"\n  },\n  titleStatus: {\n    id: 12,\n    name: \"Finished\"\n  },\n  yearRange: {\n    from: new Date(12, 12, 12),\n    to: new Date(12, 12, 12)\n  }\n};\nexport const loadTitleBases = () => {\n  return apiCallBegan({\n    url: \"/titleBases\",\n    onSuccess: titleSlice.actions.titlesRecevied.type,\n    data: test\n  });\n};","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/store/slices/TitleSlice.ts"],"names":["createSlice","apiCallBegan","initialState","topRaited","titleSlice","name","reducers","titlesRecevied","state","action","receviedTitles","payload","reducer","actions","test","filterBy","generes","titleType","id","titleStatus","yearRange","from","Date","to","loadTitleBases","url","onSuccess","type","data"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAaA,MAAMC,YAAiC,GAAG;AAACC,EAAAA,SAAS,EAAC;AAAX,CAA1C;AACA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AACpCK,EAAAA,IAAI,EAAE,YAD8B;AAEpCH,EAAAA,YAFoC;AAGpCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAIC,cAAkC,GAAG,CAAC,GAAGD,MAAM,CAACE,OAAX,CAAzC;AACAH,MAAAA,KAAK,CAACL,SAAN,GAAkBO,cAAlB;AACD;AAJO;AAH0B,CAAD,CAA9B;AAWP,eAAeN,UAAU,CAACQ,OAA1B;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAqBH,UAAU,CAACS,OAAtC;AAGP,MAAMC,IAAmB,GAAG;AACxBC,EAAAA,QAAQ,EAAE,MADc;AAExBC,EAAAA,OAAO,EAAE,EAFe;AAGxBC,EAAAA,SAAS,EAAE;AAACC,IAAAA,EAAE,EAAE,EAAL;AAASb,IAAAA,IAAI,EAAC;AAAd,GAHa;AAIxBc,EAAAA,WAAW,EAAE;AAACD,IAAAA,EAAE,EAAE,EAAL;AAASb,IAAAA,IAAI,EAAC;AAAd,GAJW;AAKxBe,EAAAA,SAAS,EAAE;AAACC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,EAAT,EAAY,EAAZ,EAAe,EAAf,CAAP;AAA2BC,IAAAA,EAAE,EAAE,IAAID,IAAJ,CAAS,EAAT,EAAY,EAAZ,EAAe,EAAf;AAA/B;AALa,CAA5B;AASA,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAOvB,YAAY,CAAC;AAClBwB,IAAAA,GAAG,EAAE,aADa;AAElBC,IAAAA,SAAS,EAAEtB,UAAU,CAACS,OAAX,CAAmBN,cAAnB,CAAkCoB,IAF3B;AAGlBC,IAAAA,IAAI,EAACd;AAHa,GAAD,CAAnB;AAKD,CANM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegan } from \"../actions/api\";\r\nimport {ITitleBase} from '../../Interfaceses/ITitleBase'\r\nimport { store } from \"../store\";\r\nimport { stat } from \"fs\";\r\nimport {ITitleFilter} from \"./../../Interfaceses/ITitleFilter\"\r\n\r\n\r\ninterface TitleBaseSliceState{\r\n  topRaited: Array<ITitleBase>\r\n\r\n}\r\n\r\n\r\nconst initialState: TitleBaseSliceState = {topRaited:[]}\r\nexport const titleSlice = createSlice({\r\n  name: \"titleBases\",\r\n  initialState,\r\n  reducers: {\r\n    titlesRecevied: (state, action) => {\r\n      let receviedTitles : Array<ITitleBase> = [...action.payload]\r\n      state.topRaited = receviedTitles;\r\n    },\r\n  },\r\n});\r\n\r\nexport default titleSlice.reducer;\r\nexport const { titlesRecevied } = titleSlice.actions;\r\n\r\n\r\nconst test : ITitleFilter = {\r\n    filterBy: \"name\",\r\n    generes: [],\r\n    titleType: {id: 12, name:\"OVA\"},\r\n    titleStatus: {id: 12, name:\"Finished\"},\r\n    yearRange: {from: new Date(12,12,12), to: new Date(12,12,12)}\r\n}\r\n\r\n\r\nexport const loadTitleBases = () => {\r\n  return apiCallBegan({\r\n    url: \"/titleBases\",\r\n    onSuccess: titleSlice.actions.titlesRecevied.type,\r\n    data:test\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}