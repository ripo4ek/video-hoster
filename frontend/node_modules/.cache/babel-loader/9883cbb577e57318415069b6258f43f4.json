{"ast":null,"code":"import { createSlice } from '@reduxjs/toolkit';\nimport { apiCallBegan } from '../actions/api';\nconst initialState = {\n  topRaited: []\n};\nexport const titleSlice = createSlice({\n  name: 'titleBases',\n  initialState,\n  reducers: {\n    titlesRecevied: (state, action) => {\n      let receviedTitles = [...action.payload];\n      state.topRaited = receviedTitles;\n    }\n  }\n});\nexport default titleSlice.reducer;\nexport const {\n  titlesRecevied\n} = titleSlice.actions;\nconst test = {\n  filterBy: 'name',\n  generes: [],\n  titleType: {\n    id: 12,\n    name: 'OVA'\n  },\n  titleStatus: {\n    id: 12,\n    name: 'Finished'\n  } //yearRange: {from: new Date(12,12,12), to: new Date(12,12,12)}\n\n};\nexport const loadTitleBases = () => {\n  return apiCallBegan({\n    url: '/titleBases',\n    onSuccess: titleSlice.actions.titlesRecevied.type,\n    params: test\n  });\n};","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/store/slices/TitleSlice.ts"],"names":["createSlice","apiCallBegan","initialState","topRaited","titleSlice","name","reducers","titlesRecevied","state","action","receviedTitles","payload","reducer","actions","test","filterBy","generes","titleType","id","titleStatus","loadTitleBases","url","onSuccess","type","params"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAUA,MAAMC,YAAiC,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAA1C;AACA,OAAO,MAAMC,UAAU,GAAGJ,WAAW,CAAC;AACpCK,EAAAA,IAAI,EAAE,YAD8B;AAEpCH,EAAAA,YAFoC;AAGpCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAIC,cAAiC,GAAG,CAAC,GAAGD,MAAM,CAACE,OAAX,CAAxC;AACAH,MAAAA,KAAK,CAACL,SAAN,GAAkBO,cAAlB;AACD;AAJO;AAH0B,CAAD,CAA9B;AAWP,eAAeN,UAAU,CAACQ,OAA1B;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAqBH,UAAU,CAACS,OAAtC;AAEP,MAAMC,IAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,MADe;AAEzBC,EAAAA,OAAO,EAAE,EAFgB;AAGzBC,EAAAA,SAAS,EAAE;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUb,IAAAA,IAAI,EAAE;AAAhB,GAHc;AAIzBc,EAAAA,WAAW,EAAE;AAAED,IAAAA,EAAE,EAAE,EAAN;AAAUb,IAAAA,IAAI,EAAE;AAAhB,GAJY,CAKzB;;AALyB,CAA3B;AAQA,OAAO,MAAMe,cAAc,GAAG,MAAM;AAClC,SAAOnB,YAAY,CAAC;AAClBoB,IAAAA,GAAG,EAAE,aADa;AAElBC,IAAAA,SAAS,EAAElB,UAAU,CAACS,OAAX,CAAmBN,cAAnB,CAAkCgB,IAF3B;AAGlBC,IAAAA,MAAM,EAAEV;AAHU,GAAD,CAAnB;AAKD,CANM","sourcesContent":["import { createSlice } from '@reduxjs/toolkit'\r\nimport { apiCallBegan } from '../actions/api'\r\nimport { ITitleBase } from '../../Interfaceses/ITitleBase'\r\nimport { store } from '../store'\r\nimport { stat } from 'fs'\r\nimport { ITitleFilter } from './../../Interfaceses/ITitleFilter'\r\n\r\ninterface TitleBaseSliceState {\r\n  topRaited: Array<ITitleBase>\r\n}\r\n\r\nconst initialState: TitleBaseSliceState = { topRaited: [] }\r\nexport const titleSlice = createSlice({\r\n  name: 'titleBases',\r\n  initialState,\r\n  reducers: {\r\n    titlesRecevied: (state, action) => {\r\n      let receviedTitles: Array<ITitleBase> = [...action.payload]\r\n      state.topRaited = receviedTitles\r\n    },\r\n  },\r\n})\r\n\r\nexport default titleSlice.reducer\r\nexport const { titlesRecevied } = titleSlice.actions\r\n\r\nconst test: ITitleFilter = {\r\n  filterBy: 'name',\r\n  generes: [],\r\n  titleType: { id: 12, name: 'OVA' },\r\n  titleStatus: { id: 12, name: 'Finished' },\r\n  //yearRange: {from: new Date(12,12,12), to: new Date(12,12,12)}\r\n}\r\n\r\nexport const loadTitleBases = () => {\r\n  return apiCallBegan({\r\n    url: '/titleBases',\r\n    onSuccess: titleSlice.actions.titlesRecevied.type,\r\n    params: test,\r\n  })\r\n}\r\n"]},"metadata":{},"sourceType":"module"}