{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"../actions/api\";\nconst initialState = [];\nexport const titleSlice = createSlice({\n  name: \"titleBases\",\n  initialState,\n  reducers: {\n    titlesRecevied: (titles, action) => {\n      titles = action.payload;\n      console.log(\"WORKED\");\n    }\n  }\n});\nexport default titleSlice.reducer;\nexport const {\n  titlesRecevied\n} = titleSlice.actions;\nexport const loadTitleBases = () => {\n  apiCallBegan({\n    url: \"/titleBases\",\n    onSuccess: titleSlice.actions.titlesRecevied.type\n  });\n};","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/store/slices/TitleSlice.ts"],"names":["createSlice","apiCallBegan","initialState","titleSlice","name","reducers","titlesRecevied","titles","action","payload","console","log","reducer","actions","loadTitleBases","url","onSuccess","type"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAUA,MAAMC,YAA+B,GAAG,EAAxC;AAEA,OAAO,MAAMC,UAAU,GAAGH,WAAW,CAAC;AACpCI,EAAAA,IAAI,EAAE,YAD8B;AAEpCF,EAAAA,YAFoC;AAGpCG,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,MAAD,EAA4BC,MAA5B,KAAuC;AACrDD,MAAAA,MAAM,GAAGC,MAAM,CAACC,OAAhB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AACD;AAJO;AAH0B,CAAD,CAA9B;AAWP,eAAeR,UAAU,CAACS,OAA1B;AACA,OAAO,MAAM;AAAEN,EAAAA;AAAF,IAAqBH,UAAU,CAACU,OAAtC;AAEP,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClCb,EAAAA,YAAY,CAAC;AACXc,IAAAA,GAAG,EAAE,aADM;AAEXC,IAAAA,SAAS,EAAEb,UAAU,CAACU,OAAX,CAAmBP,cAAnB,CAAkCW;AAFlC,GAAD,CAAZ;AAID,CALM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegan } from \"../actions/api\";\r\nimport {ITitleBase} from '../../Interfaceses/ITitleBase'\r\nimport { store } from \"../store\";\r\nimport { stat } from \"fs\";\r\n\r\ninterface TitleBaseSliceState{\r\n  titleBases: Array<ITitleBase>\r\n\r\n}\r\n\r\nconst initialState: Array<ITitleBase> = [];\r\n\r\nexport const titleSlice = createSlice({\r\n  name: \"titleBases\",\r\n  initialState,\r\n  reducers: {\r\n    titlesRecevied: (titles: Array<ITitleBase>, action) => {\r\n      titles = action.payload;\r\n      console.log(\"WORKED\");\r\n    },\r\n  },\r\n});\r\n\r\nexport default titleSlice.reducer;\r\nexport const { titlesRecevied } = titleSlice.actions;\r\n\r\nexport const loadTitleBases = () => {\r\n  apiCallBegan({\r\n    url: \"/titleBases\",\r\n    onSuccess: titleSlice.actions.titlesRecevied.type,\r\n  })\r\n};\r\n"]},"metadata":{},"sourceType":"module"}