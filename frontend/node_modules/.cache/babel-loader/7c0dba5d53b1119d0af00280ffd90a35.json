{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\video-hoster\\\\frontend\\\\src\\\\components\\\\titleSlider.tsx\";\nimport * as React from 'react';\nimport Slider from 'react-slick';\nimport TitleCard from './titleCard';\nimport { connect } from 'react-redux';\n\nclass TitleSlider extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.sliderRender = () => {\n      if (typeof this.props.titleBases !== 'undefined') {\n        return this.props.titleBases.map(tb => /*#__PURE__*/React.createElement(TitleCard, {\n          title: tb,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 48\n          }\n        }));\n      }\n\n      return null;\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.loadTitleBases) this.props.loadTitleBases();\n  }\n\n  render() {\n    // const testElement: ITitleBase = {\n    //   titleDetailsId: 222,\n    //   id: 12,\n    //   name: 'TestAnime',\n    //   posterUrl: 'test.jpg',\n    //   treeId: 2,\n    //   userRating: 9.5,\n    //   generes: new Array<IGenere>(),\n    // }\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 6,\n      slidesToScroll: 3,\n      arrows: false,\n      className: '',\n      adaptiveHeight: true\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), this.sliderRender()));\n  }\n\n} // const mapStateToProps = (\n//   state: any,\n//   ownProps: TitleSliderProps,\n// ): ReduxTitleSliderProps => {\n//   console.log(state)\n//   return {\n//     titleBases: state.topRaitedTitles,\n//   }\n// }\n// const mapDispatchToProps = (\n//   dispatch: Redux.Dispatch<Redux.AnyAction>,\n//   ownProps: TitleSliderProps,\n// ): DispatchProps => ({\n//   loadTitleBases: () => dispatch(loadTopRatiedTitleBases(10)),\n// })\n\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  return {\n    titleBases: state.titleBases.slice().sortslice(0, 10)\n  };\n};\n\nexport default connect(mapStateToProps)(TitleSlider);","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/components/titleSlider.tsx"],"names":["React","Slider","TitleCard","connect","TitleSlider","Component","sliderRender","props","titleBases","map","tb","componentDidMount","loadTitleBases","render","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","className","adaptiveHeight","mapStateToProps","state","ownProps","console","log","slice","sortslice"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAiC,aAAjC;AAEA,OAAOC,SAAP,MAAsB,aAAtB;AAGA,SAASC,OAAT,QAAwB,aAAxB;;AAiBA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAmE;AAAA;AAAA;;AAAA,SAKjEC,YALiE,GAKlD,MAAM;AACnB,UAAI,OAAO,KAAKC,KAAL,CAAWC,UAAlB,KAAiC,WAArC,EAAkD;AAChD,eAAO,KAAKD,KAAL,CAAWC,UAAX,CAAsBC,GAAtB,CAA2BC,EAAD,iBAAQ,oBAAC,SAAD;AAAW,UAAA,KAAK,EAAEA,EAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAlC,CAAP;AACD;;AACD,aAAO,IAAP;AACD,KAVgE;AAAA;;AACjEC,EAAAA,iBAAiB,GAAG;AAClB,QAAI,KAAKJ,KAAL,CAAWK,cAAf,EAA+B,KAAKL,KAAL,CAAWK,cAAX;AAChC;;AAQDC,EAAAA,MAAM,GAAG;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,UAAMC,QAAkB,GAAG;AACzBC,MAAAA,IAAI,EAAE,KADmB;AAEzBC,MAAAA,QAAQ,EAAE,KAFe;AAGzBC,MAAAA,KAAK,EAAE,GAHkB;AAIzBC,MAAAA,YAAY,EAAE,CAJW;AAKzBC,MAAAA,cAAc,EAAE,CALS;AAMzBC,MAAAA,MAAM,EAAE,KANiB;AAOzBC,MAAAA,SAAS,EAAE,EAPc;AAQzBC,MAAAA,cAAc,EAAE;AARS,KAA3B;AAUA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,oBAAYR,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAuB,KAAKR,YAAL,EAAvB,CADF,CADF;AAKD;;AApCgE,C,CAsCnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA,MAAMiB,eAAe,GAAG,CACtBC,KADsB,EAEtBC,QAFsB,KAGI;AAC1BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACA,SAAO;AACLhB,IAAAA,UAAU,EAAEgB,KAAK,CAAChB,UAAN,CAAiBoB,KAAjB,GAAyBC,SAAzB,CAAmC,CAAnC,EAAsC,EAAtC;AADP,GAAP;AAGD,CARD;;AASA,eAAe1B,OAAO,CAACoB,eAAD,CAAP,CAAyBnB,WAAzB,CAAf","sourcesContent":["import * as React from 'react'\r\nimport Slider, { Settings } from 'react-slick'\r\nimport { ITitleBase } from '../Interfaceses/ITitleBase'\r\nimport TitleCard from './titleCard'\r\nimport styles from './../styles/slider.module.css'\r\nimport { IGenere } from './../Interfaceses/IGenere'\r\nimport { connect } from 'react-redux'\r\nimport { loadTitleBases } from '../store/slices/TitleSlice'\r\nimport * as Redux from 'redux'\r\n\r\nexport interface TitleSliderProps {}\r\n\r\ninterface ReduxTitleSliderProps {\r\n  titleBases?: Array<ITitleBase>\r\n}\r\n\r\ninterface DispatchProps {\r\n  loadTitleBases?: () => void\r\n}\r\n\r\ntype Props = ReduxTitleSliderProps & DispatchProps & TitleSliderProps\r\n\r\nexport interface TitleSliderState {}\r\nclass TitleSlider extends React.Component<Props, TitleSliderState> {\r\n  componentDidMount() {\r\n    if (this.props.loadTitleBases) this.props.loadTitleBases()\r\n  }\r\n\r\n  sliderRender = () => {\r\n    if (typeof this.props.titleBases !== 'undefined') {\r\n      return this.props.titleBases.map((tb) => <TitleCard title={tb} />)\r\n    }\r\n    return null\r\n  }\r\n  render() {\r\n    // const testElement: ITitleBase = {\r\n    //   titleDetailsId: 222,\r\n    //   id: 12,\r\n    //   name: 'TestAnime',\r\n    //   posterUrl: 'test.jpg',\r\n    //   treeId: 2,\r\n    //   userRating: 9.5,\r\n    //   generes: new Array<IGenere>(),\r\n    // }\r\n    const settings: Settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 6,\r\n      slidesToScroll: 3,\r\n      arrows: false,\r\n      className: '',\r\n      adaptiveHeight: true,\r\n    }\r\n    return (\r\n      <div>\r\n        <Slider {...settings}>{this.sliderRender()}</Slider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n// const mapStateToProps = (\r\n//   state: any,\r\n//   ownProps: TitleSliderProps,\r\n// ): ReduxTitleSliderProps => {\r\n//   console.log(state)\r\n//   return {\r\n//     titleBases: state.topRaitedTitles,\r\n//   }\r\n// }\r\n// const mapDispatchToProps = (\r\n//   dispatch: Redux.Dispatch<Redux.AnyAction>,\r\n//   ownProps: TitleSliderProps,\r\n// ): DispatchProps => ({\r\n//   loadTitleBases: () => dispatch(loadTopRatiedTitleBases(10)),\r\n// })\r\nconst mapStateToProps = (\r\n  state: any,\r\n  ownProps: TitleSliderProps,\r\n): ReduxTitleSliderProps => {\r\n  console.log(state)\r\n  return {\r\n    titleBases: state.titleBases.slice().sortslice(0, 10),\r\n  }\r\n}\r\nexport default connect(mapStateToProps)(TitleSlider)\r\n"]},"metadata":{},"sourceType":"module"}