{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\basicComponents\\\\infoElement.tsx\";\nimport * as React from 'react';\nimport styles from './../../styles/infoElement.module.css';\n\nclass InfdElement extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.infoRender = data => {\n      if (typeof data === 'string' || typeof data === 'number') return this.oneElementRender(data);\n      if (this.isStringArray(data)) return this.multiElementsRender(data);\n      let names = data.map(({\n        name\n      }) => name);\n      console.log(names);\n      return this.multiElementsRender(names);\n    };\n\n    this.isStringArray = data => {\n      if (data instanceof Array) {\n        let somethingIsNotString = false;\n        data.forEach(function (item) {\n          if (typeof item !== 'string') {\n            somethingIsNotString = true;\n          }\n        });\n\n        if (!somethingIsNotString && data.length > 0) {\n          return true;\n        }\n\n        return false;\n      }\n    };\n\n    this.oneElementRender = element => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementListFlex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.dataContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }\n      }, element)));\n    };\n\n    this.multiElementsRender = elements => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementListFlex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 9\n        }\n      }, elements.slice(0, -1).map(element => /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }\n      }, `${element},`)), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }\n      }, elements[elements.length - 1])));\n    };\n  }\n\n  render() {\n    const infoElement = { ...this.props\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.elementName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }\n    }, infoElement.name), infoElement.children));\n  }\n\n}\n\nexport default InfdElement;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/basicComponents/infoElement.tsx"],"names":["React","styles","InfdElement","Component","infoRender","data","oneElementRender","isStringArray","multiElementsRender","names","map","name","console","log","Array","somethingIsNotString","forEach","item","length","element","elementList","elementListFlex","elementInfo","dataContainer","elements","slice","render","infoElement","props","container","flexContainer","elementName","children"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport styles from './../../styles/infoElement.module.css'\r\nimport { DropdownDivider } from 'react-bootstrap/Dropdown'\r\nimport { IInfoElement } from './../../Interfaceses/IInfoElement'\r\nexport interface InfoElementProps {\r\n  name: string\r\n  //info: string | Array<string> | number | Array<IInfoElement>\r\n}\r\n\r\nexport interface InfoElementState {}\r\n\r\nclass InfdElement extends React.Component<InfoElementProps, InfoElementState> {\r\n  private infoRender = (\r\n    data: string | Array<string> | number | Array<IInfoElement>,\r\n  ) => {\r\n    if (typeof data === 'string' || typeof data === 'number')\r\n      return this.oneElementRender(data)\r\n    if (this.isStringArray(data as Array<string>))\r\n      return this.multiElementsRender(data as Array<string>)\r\n\r\n    let names = (data as Array<IInfoElement>).map(({ name }) => name)\r\n    console.log(names)\r\n    return this.multiElementsRender(names)\r\n  }\r\n  private isStringArray = (data: any) => {\r\n    if (data instanceof Array) {\r\n      let somethingIsNotString = false\r\n      data.forEach(function (item) {\r\n        if (typeof item !== 'string') {\r\n          somethingIsNotString = true\r\n        }\r\n      })\r\n      if (!somethingIsNotString && data.length > 0) {\r\n        return true\r\n      }\r\n      return false\r\n    }\r\n  }\r\n  private oneElementRender = (element: string | number) => {\r\n    return (\r\n      <div className={styles.elementList}>\r\n        <div className={styles.elementListFlex}></div>\r\n        <div className={styles.elementInfo}>\r\n          <div className={styles.dataContainer}>{element}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  private multiElementsRender = (elements: Array<string | number>) => {\r\n    return (\r\n      <div className={styles.elementList}>\r\n        <div className={styles.elementListFlex}>\r\n          {elements.slice(0, -1).map((element: string | number) => (\r\n            <div className={styles.elementInfo}>{`${element},`}</div>\r\n          ))}\r\n          <div className={styles.elementInfo}>\r\n            {elements[elements.length - 1]}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    const infoElement = { ...this.props }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.flexContainer}>\r\n          <div className={styles.elementName}>{infoElement.name}</div>\r\n          {infoElement.children}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfdElement\r\n"]},"metadata":{},"sourceType":"module"}