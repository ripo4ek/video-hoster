{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\video-hoster\\\\frontend\\\\src\\\\components\\\\mainPage.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport TitleSlider from './titleSlider';\nimport TitleChunk from './titleChunk';\nimport TitleList from './titleList';\nimport { loadTitleBases } from '../store/slices/titleSlice';\nimport { connect } from 'react-redux';\nimport TitlePreview from './titlePreview';\nimport { createScheduleChunk, createLastUpdatedChunk } from './../helperFunctions/createChunk';\n\nclass MainPage extends React.Component {\n  componentDidMount() {\n    this.props.loadTitleBases();\n  }\n\n  render() {\n    let lastUpdated = createLastUpdatedChunk(this.props.lastUpdatedTitleBases);\n    let schedule = createScheduleChunk(this.props.goingTitleBases);\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 15\n      }\n    }, \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043D\\u0430 \\u044D\\u043A\\u0440\\u0430\\u043D\\u0430\\u0445\")), /*#__PURE__*/React.createElement(TitleSlider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, console.log(lastUpdated), /*#__PURE__*/React.createElement(TitleChunk, {\n      name: 'Последние обновления',\n      elements: lastUpdated,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleChunk, {\n      name: 'Расписание',\n      elements: schedule,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitlePreview, {\n      name: 'Последние релизы',\n      titles: this.props.goingTitleBases,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleList, {\n      name: 'Новые релизы',\n      preview: true,\n      elementsToShow: 5,\n      titles: this.props.goingTitleBases,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }\n    }), ' '));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  console.log(state);\n  const titleBases = state.entities.titles.titleBases.slice();\n  return {\n    topRaitedTitleBases: titleBases.sort((a, b) => a.userRating > b.userRating ? 1 : b.userRating > a.userRating ? -1 : 0).slice(0, 10),\n    lastUpdatedTitleBases: titleBases.sort((a, b) => a.lastUpdated > b.lastUpdated ? 1 : b.lastUpdated > a.lastUpdated ? -1 : 0).slice(0, 10),\n    newAddedTitleBases: titleBases.sort((a, b) => a.addedOnSite > b.addedOnSite ? 1 : b.addedOnSite > a.addedOnSite ? -1 : 0).slice(0, 10),\n    goingTitleBases: titleBases.filter(tb => tb.isFinished === false)\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadTitleBases: () => dispatch(loadTitleBases())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/components/mainPage.tsx"],"names":["React","Container","Row","Col","TitleSlider","TitleChunk","TitleList","loadTitleBases","connect","TitlePreview","createScheduleChunk","createLastUpdatedChunk","MainPage","Component","componentDidMount","props","render","lastUpdated","lastUpdatedTitleBases","schedule","goingTitleBases","console","log","mapStateToProps","state","ownProps","titleBases","entities","titles","slice","topRaitedTitleBases","sort","a","b","userRating","newAddedTitleBases","addedOnSite","filter","tb","isFinished","mapDispatchToProps","dispatch"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport TitleSlider from './titleSlider'\r\nimport TitleChunk from './titleChunk'\r\nimport TitleList from './titleList'\r\nimport TitleFilter from './titleFilter'\r\nimport { IGenere } from './../Interfaceses/IGenere'\r\nimport { ITitleElement } from './../Interfaceses/ITitleElement'\r\nimport { ITitleList } from './../Interfaceses/ITitleList'\r\nimport { ITitleDropdownElement } from './../Interfaceses/ITitleDropdownElement'\r\nimport { ITitleChunk } from './../Interfaceses/ITitleChunk'\r\nimport { ITitleStatus } from './../Interfaceses/ITitleStatus'\r\nimport { IFilterData } from './../Interfaceses/IFilterData'\r\nimport { ITitleDropdownList } from './../Interfaceses/ITitleDropdownList'\r\nimport { ITitleBase } from './../Interfaceses/ITitleBase'\r\nimport { loadTitleBases } from '../store/slices/titleSlice'\r\nimport { connect } from 'react-redux'\r\nimport * as Redux from 'redux'\r\nimport TitlePreview from './titlePreview'\r\nimport {\r\n  createScheduleChunk,\r\n  createLastUpdatedChunk,\r\n} from './../helperFunctions/createChunk'\r\n\r\nexport interface MainPageProps {}\r\n\r\ninterface ReduxMainPageProps {\r\n  topRaitedTitleBases: Array<ITitleBase>\r\n  lastUpdatedTitleBases: Array<ITitleBase>\r\n  newAddedTitleBases: Array<ITitleBase>\r\n  goingTitleBases: Array<ITitleBase>\r\n}\r\n\r\ninterface DispatchProps {\r\n  loadTitleBases: () => void\r\n}\r\n\r\ntype Props = ReduxMainPageProps & DispatchProps & MainPageProps\r\n\r\nexport interface MainPageState {}\r\n\r\nclass MainPage extends React.Component<Props, MainPageState> {\r\n  componentDidMount() {\r\n    this.props.loadTitleBases()\r\n  }\r\n  render() {\r\n    let lastUpdated = createLastUpdatedChunk(this.props.lastUpdatedTitleBases)\r\n    let schedule = createScheduleChunk(this.props.goingTitleBases)\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h2>\r\n              <a>Сейчас на экранах</a>\r\n            </h2>\r\n            <TitleSlider />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            {console.log(lastUpdated)}\r\n            <TitleChunk name={'Последние обновления'} elements={lastUpdated} />\r\n          </Col>\r\n          <Col>\r\n            <TitleChunk name={'Расписание'} elements={schedule} />\r\n          </Col>\r\n          <Col>\r\n            <TitlePreview\r\n              name={'Последние релизы'}\r\n              titles={this.props.goingTitleBases}\r\n            />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={8}>\r\n            <TitleList\r\n              name={'Новые релизы'}\r\n              preview\r\n              elementsToShow={5}\r\n              titles={this.props.goingTitleBases}\r\n            />\r\n          </Col>\r\n          <Col>{/* <TitleFilter preview filterData={filterData} /> */}</Col>{' '}\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: any,\r\n  ownProps: MainPageProps,\r\n): ReduxMainPageProps => {\r\n  console.log(state)\r\n  const titleBases: Array<ITitleBase> = state.entities.titles.titleBases.slice()\r\n  return {\r\n    topRaitedTitleBases: titleBases\r\n      .sort((a: ITitleBase, b: ITitleBase) =>\r\n        a.userRating > b.userRating ? 1 : b.userRating > a.userRating ? -1 : 0,\r\n      )\r\n      .slice(0, 10),\r\n    lastUpdatedTitleBases: titleBases\r\n      .sort((a: ITitleBase, b: ITitleBase) =>\r\n        a.lastUpdated > b.lastUpdated\r\n          ? 1\r\n          : b.lastUpdated > a.lastUpdated\r\n          ? -1\r\n          : 0,\r\n      )\r\n      .slice(0, 10),\r\n    newAddedTitleBases: titleBases\r\n      .sort((a: ITitleBase, b: ITitleBase) =>\r\n        a.addedOnSite > b.addedOnSite\r\n          ? 1\r\n          : b.addedOnSite > a.addedOnSite\r\n          ? -1\r\n          : 0,\r\n      )\r\n      .slice(0, 10),\r\n    goingTitleBases: titleBases.filter((tb) => tb.isFinished === false),\r\n  }\r\n}\r\nconst mapDispatchToProps = (\r\n  dispatch: Redux.Dispatch<Redux.AnyAction>,\r\n  ownProps: MainPageProps,\r\n): DispatchProps => ({\r\n  loadTitleBases: () => dispatch(loadTitleBases()),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)\r\n"]},"metadata":{},"sourceType":"module"}