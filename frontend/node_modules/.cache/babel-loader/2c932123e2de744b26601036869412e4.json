{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\video-hoster\\\\frontend\\\\src\\\\components\\\\titleSlider.tsx\";\nimport * as React from 'react';\nimport Slider from 'react-slick';\nimport { connect } from 'react-redux';\nimport { loadTitleBases } from '../store/slices/TitleSlice';\n\nclass TitleSlider extends React.Component {\n  componentDidMount() {\n    console.log(this.props.loadTitleBases);\n    if (this.props.loadTitleBases) this.props.loadTitleBases();\n  }\n\n  render() {\n    const testElement = {\n      titleDetailsId: 222,\n      id: 12,\n      name: 'TestAnime',\n      posterUrl: 'test.jpg',\n      treeId: 2,\n      userRating: 9.5,\n      generes: new Array()\n    };\n    const settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 6,\n      slidesToScroll: 3,\n      arrows: false,\n      className: '',\n      adaptiveHeight: true\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Slider, Object.assign({}, settings, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }\n    }), console.log(this.props.titleBases[0])));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  titleBases: state\n});\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadTitleBases: () => dispatch(loadTitleBases())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TitleSlider);","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/components/titleSlider.tsx"],"names":["React","Slider","connect","loadTitleBases","TitleSlider","Component","componentDidMount","console","log","props","render","testElement","titleDetailsId","id","name","posterUrl","treeId","userRating","generes","Array","settings","dots","infinite","speed","slidesToShow","slidesToScroll","arrows","className","adaptiveHeight","titleBases","mapStateToProps","state","ownProps","mapDispatchToProps","dispatch"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAiC,aAAjC;AAKA,SAASC,OAAT,QAAwB,aAAxB;AACA,SAASC,cAAT,QAA+B,4BAA/B;;AAkBA,MAAMC,WAAN,SAA0BJ,KAAK,CAACK,SAAhC,CAAmE;AACjEC,EAAAA,iBAAiB,GAAE;AACjBC,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWN,cAAvB;AACA,QAAG,KAAKM,KAAL,CAAWN,cAAd,EACE,KAAKM,KAAL,CAAWN,cAAX;AACH;;AAEDO,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAuB,GAAG;AAC9BC,MAAAA,cAAc,EAAE,GADc;AAE9BC,MAAAA,EAAE,EAAE,EAF0B;AAG9BC,MAAAA,IAAI,EAAE,WAHwB;AAI9BC,MAAAA,SAAS,EAAE,UAJmB;AAK9BC,MAAAA,MAAM,EAAE,CALsB;AAM9BC,MAAAA,UAAU,EAAE,GANkB;AAO9BC,MAAAA,OAAO,EAAE,IAAIC,KAAJ;AAPqB,KAAhC;AASA,UAAMC,QAAkB,GAAG;AACzBC,MAAAA,IAAI,EAAE,KADmB;AAEzBC,MAAAA,QAAQ,EAAE,KAFe;AAGzBC,MAAAA,KAAK,EAAE,GAHkB;AAIzBC,MAAAA,YAAY,EAAE,CAJW;AAKzBC,MAAAA,cAAc,EAAE,CALS;AAMzBC,MAAAA,MAAM,EAAE,KANiB;AAOzBC,MAAAA,SAAS,EAAE,EAPc;AAQzBC,MAAAA,cAAc,EAAE;AARS,KAA3B;AAUA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD,oBAAYR,QAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QACGb,OAAO,CAACC,GAAR,CAAY,KAAKC,KAAL,CAAWoB,UAAX,CAAsB,CAAtB,CAAZ,CADH,CADF,CADF;AAQD;;AAnCgE;;AAqCnE,MAAMC,eAAe,GAAG,CAACC,KAAD,EAA2BC,QAA3B,MAAoF;AAACH,EAAAA,UAAU,EAAEE;AAAb,CAApF,CAAxB;;AACA,MAAME,kBAAkB,GAAG,CAACC,QAAD,EAA4CF,QAA5C,MAA2F;AACpH7B,EAAAA,cAAc,EAAE,MAAI+B,QAAQ,CAAC/B,cAAc,EAAf;AADwF,CAA3F,CAA3B;;AAGA,eAAeD,OAAO,CAAC4B,eAAD,EAAiBG,kBAAjB,CAAP,CAA4C7B,WAA5C,CAAf","sourcesContent":["import * as React from 'react'\r\nimport Slider, { Settings } from 'react-slick'\r\nimport { ITitleBase } from '../Interfaceses/ITitleBase'\r\nimport TitleCard from './titleCard'\r\nimport styles from './../styles/slider.module.css'\r\nimport { IGenere } from './../Interfaceses/IGenere'\r\nimport { connect } from 'react-redux'\r\nimport { loadTitleBases } from '../store/slices/TitleSlice'\r\nimport * as Redux from 'redux'\r\n\r\nexport interface TitleSliderProps {}\r\n\r\ninterface ReduxTitleSliderProps {\r\n  titleBases: Array<ITitleBase>\r\n}\r\n\r\ninterface DispatchProps {\r\n  loadTitleBases?: () => void\r\n}\r\n\r\ntype Props = ReduxTitleSliderProps & DispatchProps & TitleSliderProps\r\n\r\nexport interface TitleSliderState {\r\n  \r\n}\r\nclass TitleSlider extends React.Component<Props, TitleSliderState> {\r\n  componentDidMount(){\r\n    console.log(this.props.loadTitleBases);\r\n    if(this.props.loadTitleBases)\r\n      this.props.loadTitleBases();\r\n  }\r\n\r\n  render() {\r\n    const testElement: ITitleBase = {\r\n      titleDetailsId: 222,\r\n      id: 12,\r\n      name: 'TestAnime',\r\n      posterUrl: 'test.jpg',\r\n      treeId: 2,\r\n      userRating: 9.5,\r\n      generes: new Array<IGenere>(),\r\n    }\r\n    const settings: Settings = {\r\n      dots: false,\r\n      infinite: false,\r\n      speed: 500,\r\n      slidesToShow: 6,\r\n      slidesToScroll: 3,\r\n      arrows: false,\r\n      className: '',\r\n      adaptiveHeight: true,\r\n    }\r\n    return (\r\n      <div>\r\n        <Slider {...settings}>\r\n          {console.log(this.props.titleBases[0])}\r\n          {/* {this.props.titleBases.map(titleBase => <TitleCard title={titleBase} />)} */}\r\n        </Slider>\r\n      </div>\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state: Array<ITitleBase>, ownProps: TitleSliderProps) : ReduxTitleSliderProps =>  ({titleBases: state})\r\nconst mapDispatchToProps = (dispatch: Redux.Dispatch<Redux.AnyAction>, ownProps: TitleSliderProps ) : DispatchProps=>({\r\n  loadTitleBases: ()=>dispatch(loadTitleBases())\r\n})\r\nexport default connect(mapStateToProps,mapDispatchToProps)(TitleSlider)\r\n"]},"metadata":{},"sourceType":"module"}