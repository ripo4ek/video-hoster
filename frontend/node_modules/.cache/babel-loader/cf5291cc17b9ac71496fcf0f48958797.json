{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\episodeSelect.tsx\";\n//TODO: Рефактор + пофиксить state\nimport * as React from 'react';\nimport styles from './../styles/episodeSelect.module.css';\nimport extractor from './../helperFunctions/sizeElementExtractor';\n\nclass EpisodeSelect extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.episodesContainer = React.createRef();\n    this.episode = React.createRef();\n    this.showingContainer = React.createRef();\n    this.state = {\n      leftBoundary: 0,\n      rightBoundary: 0,\n      numberToSkip: 0,\n      firstShowingElement: 0,\n      lastShowingElement: 0,\n      elementLengthInPersent: -1,\n      translateXState: '0%'\n    };\n\n    this.rightClickHandler = () => {\n      const state = { ...this.state\n      };\n      state.firstShowingElement += state.numberToSkip;\n      state.lastShowingElement = state.lastShowingElement + state.numberToSkip > state.rightBoundary ? state.rightBoundary : state.lastShowingElement + state.numberToSkip;\n      const prevValue = Number(state.translateXState.slice(0, -1));\n      const moveSize = -state.numberToSkip * state.elementLengthInPersent;\n      console.log(moveSize, moveSize + prevValue, prevValue);\n      state.translateXState = `${moveSize + prevValue}%`;\n      this.setState(state);\n    };\n\n    this.leftClickHandler = () => {\n      const state = { ...this.state\n      };\n      state.lastShowingElement = state.firstShowingElement;\n      state.firstShowingElement = state.firstShowingElement - state.numberToSkip < state.leftBoundary ? state.leftBoundary : state.lastShowingElement - state.numberToSkip;\n      const prevValue = Number(state.translateXState.slice(0, -1));\n      const moveSize = state.numberToSkip * state.elementLengthInPersent;\n      console.log(moveSize, moveSize + prevValue, prevValue);\n      state.translateXState = `${moveSize + prevValue}%`;\n      this.setState(state);\n    };\n\n    this.episodeInCurrentRange = episodeNum => {\n      return episodeNum >= this.state.firstShowingElement && episodeNum <= this.state.lastShowingElement;\n    };\n\n    this.IsInvalid = episodeNum => {\n      return episodeNum > this.state.rightBoundary || episodeNum < this.state.leftBoundary;\n    };\n\n    this.inputChangeHandler = ({\n      target\n    }) => {\n      let state = { ...this.state\n      };\n      let episodes = this.props.episodes;\n      const episodeNum = Number.parseInt(target.value);\n\n      if (this.IsInvalid(episodeNum)) {\n        return;\n      }\n\n      const episode = episodes.find(episode => episode.episodeNumber === episodeNum);\n\n      if (this.episodeInCurrentRange(episodeNum)) {\n        console.log(this.props.episodes, episode);\n        if (typeof episode !== 'undefined') this.props.onSelect(episode);\n        return;\n      }\n\n      let steps = 1;\n\n      if (episodeNum > state.lastShowingElement) {\n        console.log(episodeNum, state.lastShowingElement);\n\n        while (state.lastShowingElement < episodeNum) {\n          steps++;\n          state.firstShowingElement += state.numberToSkip;\n          state.lastShowingElement = state.lastShowingElement + state.numberToSkip > state.rightBoundary ? state.rightBoundary : state.lastShowingElement + state.numberToSkip;\n        }\n\n        const prevValue = Number(state.translateXState.slice(0, -1));\n        const moveSize = -(state.numberToSkip * (steps - 1) * state.elementLengthInPersent);\n        console.log(moveSize, moveSize + prevValue, prevValue);\n        state.translateXState = `${moveSize + prevValue}%`;\n      }\n\n      if (episodeNum < state.firstShowingElement) {\n        console.log(episodeNum, state.lastShowingElement);\n\n        while (episodeNum < state.firstShowingElement) {\n          steps++;\n          state.lastShowingElement = state.firstShowingElement;\n          state.firstShowingElement = state.firstShowingElement - state.numberToSkip < state.leftBoundary ? state.leftBoundary : state.lastShowingElement - state.numberToSkip;\n        }\n\n        const prevValue = Number(state.translateXState.slice(0, -1));\n        const moveSize = state.numberToSkip * (steps - 1) * state.elementLengthInPersent;\n        state.translateXState = `${moveSize + prevValue}%`;\n      }\n\n      this.setState(state);\n    };\n  }\n\n  componentDidMount() {\n    const state = { ...this.state\n    };\n    this.props.episodes.sort((a, b) => a.episodeNumber > b.episodeNumber ? 1 : -1);\n    const {\n      current: container\n    } = this.episodesContainer;\n    const {\n      current: element\n    } = this.episode;\n    const {\n      current: showingContainer\n    } = this.showingContainer;\n    const nodeStyle = window.getComputedStyle(element);\n    const elementMarginRight = nodeStyle.getPropertyValue('margin-right');\n    const margin = extractor(elementMarginRight);\n    const persent = 100 * (margin + element.offsetWidth) / container.offsetWidth;\n    state.numberToSkip = Math.trunc(showingContainer.offsetWidth / (margin + element.offsetWidth));\n    const lastEpisodeNum = this.props.episodes[this.props.episodes.length - 1].episodeNumber;\n    state.elementLengthInPersent = Math.trunc(persent);\n    state.firstShowingElement = this.props.episodes[0].episodeNumber;\n    state.lastShowingElement = state.numberToSkip < lastEpisodeNum ? state.numberToSkip + 1 : lastEpisodeNum;\n    state.leftBoundary = this.props.episodes[0].episodeNumber;\n    state.rightBoundary = lastEpisodeNum;\n    this.setState(state);\n  }\n\n  render() {\n    const episodes = this.props.episodes;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.containerFlex,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.episodeSelect,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.episodeSelectText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 13\n      }\n    }, \"\\u0421\\u0435\\u0440\\u0438\\u044F \\u2116\"), /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.inputChangeHandler,\n      className: styles.episodeSelectInput,\n      type: \"number\",\n      min: this.state.leftBoundary,\n      max: this.state.rightBoundary,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.episodeText,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }\n    }, \"\\u0421\\u0435\\u0440\\u0438\\u044F\"), /*#__PURE__*/React.createElement(\"div\", {\n      ref: this.showingContainer,\n      className: styles.btnContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        transform: `translateX(${this.state.translateXState})`\n      },\n      ref: this.episodesContainer,\n      className: styles.btns,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 13\n      }\n    }, episodes.map(episode => /*#__PURE__*/React.createElement(\"div\", {\n      onClick: () => this.props.onSelect(episode),\n      ref: this.episode,\n      className: this.props.selectedEpisode === episode ? styles.btnActive : styles.btn,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 17\n      }\n    }, episode.episodeNumber)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.changeBtnFlexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"button\", {\n      disabled: this.state.firstShowingElement <= this.state.leftBoundary,\n      onClick: () => {\n        this.leftClickHandler();\n      },\n      className: styles.changeBtnLeft,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: styles.svg,\n      width: 35,\n      height: 35,\n      viewBox: \"0 0 24 24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M0-.5h24v24H0z\",\n      fill: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 17\n      }\n    }))), /*#__PURE__*/React.createElement(\"button\", {\n      disabled: this.state.lastShowingElement >= this.state.rightBoundary,\n      onClick: () => {\n        this.rightClickHandler();\n      },\n      className: styles.changeBtnRight,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 231,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"svg\", {\n      className: styles.svg,\n      width: 35,\n      height: 35,\n      viewBox: \"0 0 24 24\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"path\", {\n      d: \"M0-.25h24v24H0z\",\n      fill: \"none\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 17\n      }\n    }))))));\n  }\n\n}\n\nexport default EpisodeSelect;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/episodeSelect.tsx"],"names":["React","styles","extractor","EpisodeSelect","Component","episodesContainer","createRef","episode","showingContainer","state","leftBoundary","rightBoundary","numberToSkip","firstShowingElement","lastShowingElement","elementLengthInPersent","translateXState","rightClickHandler","prevValue","Number","slice","moveSize","console","log","setState","leftClickHandler","episodeInCurrentRange","episodeNum","IsInvalid","inputChangeHandler","target","episodes","props","parseInt","value","find","episodeNumber","onSelect","steps","componentDidMount","sort","a","b","current","container","element","nodeStyle","window","getComputedStyle","elementMarginRight","getPropertyValue","margin","persent","offsetWidth","Math","trunc","lastEpisodeNum","length","render","containerFlex","episodeSelect","episodeSelectText","episodeSelectInput","episodeText","btnContainer","transform","btns","map","selectedEpisode","btnActive","btn","changeBtnFlexContainer","changeBtnLeft","svg","changeBtnRight"],"mappings":"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","sourcesContent":["//TODO: Рефактор + пофиксить state\r\n\r\nimport * as React from 'react'\r\nimport { Component } from 'react'\r\nimport styles from './../styles/episodeSelect.module.css'\r\nimport Image from './basicComponents/image'\r\nimport { IEpisode } from './../Interfaceses/IEpisode'\r\nimport extractor from './../helperFunctions/sizeElementExtractor'\r\nexport interface EpisodeSelectProps {\r\n  episodes: Array<IEpisode>\r\n  onSelect(episode: IEpisode): void\r\n\r\n  selectedEpisode: IEpisode | null\r\n}\r\n\r\nexport interface EpisodeSelectState {\r\n  leftBoundary: number\r\n  rightBoundary: number\r\n  firstShowingElement: number\r\n  lastShowingElement: number\r\n  numberToSkip: number\r\n  elementLengthInPersent: number\r\n  translateXState: string\r\n}\r\n\r\nclass EpisodeSelect extends React.Component<\r\n  EpisodeSelectProps,\r\n  EpisodeSelectState\r\n> {\r\n  private episodesContainer = React.createRef<HTMLDivElement>()\r\n  private episode = React.createRef<HTMLDivElement>()\r\n  private showingContainer = React.createRef<HTMLDivElement>()\r\n  state: EpisodeSelectState = {\r\n    leftBoundary: 0,\r\n    rightBoundary: 0,\r\n    numberToSkip: 0,\r\n    firstShowingElement: 0,\r\n    lastShowingElement: 0,\r\n    elementLengthInPersent: -1,\r\n    translateXState: '0%',\r\n  }\r\n  componentDidMount() {\r\n    const state = { ...this.state }\r\n    this.props.episodes.sort((a, b) =>\r\n      a.episodeNumber > b.episodeNumber ? 1 : -1,\r\n    )\r\n    const { current: container }: any = this.episodesContainer\r\n    const { current: element }: any = this.episode\r\n    const { current: showingContainer }: any = this.showingContainer\r\n\r\n    const nodeStyle = window.getComputedStyle(element)\r\n    const elementMarginRight = nodeStyle.getPropertyValue('margin-right')\r\n    const margin = extractor(elementMarginRight)\r\n\r\n    const persent =\r\n      (100 * (margin + element.offsetWidth)) / container.offsetWidth\r\n    state.numberToSkip = Math.trunc(\r\n      showingContainer.offsetWidth / (margin + element.offsetWidth),\r\n    )\r\n    const lastEpisodeNum = this.props.episodes[this.props.episodes.length - 1]\r\n      .episodeNumber\r\n    state.elementLengthInPersent = Math.trunc(persent)\r\n\r\n    state.firstShowingElement = this.props.episodes[0].episodeNumber\r\n    state.lastShowingElement =\r\n      state.numberToSkip < lastEpisodeNum\r\n        ? state.numberToSkip + 1\r\n        : lastEpisodeNum\r\n\r\n    state.leftBoundary = this.props.episodes[0].episodeNumber\r\n    state.rightBoundary = lastEpisodeNum\r\n\r\n    this.setState(state)\r\n  }\r\n\r\n  rightClickHandler = () => {\r\n    const state = { ...this.state }\r\n\r\n    state.firstShowingElement += state.numberToSkip\r\n    state.lastShowingElement =\r\n      state.lastShowingElement + state.numberToSkip > state.rightBoundary\r\n        ? state.rightBoundary\r\n        : state.lastShowingElement + state.numberToSkip\r\n\r\n    const prevValue = Number(state.translateXState.slice(0, -1))\r\n    const moveSize = -state.numberToSkip * state.elementLengthInPersent\r\n    console.log(moveSize, moveSize + prevValue, prevValue)\r\n    state.translateXState = `${moveSize + prevValue}%`\r\n\r\n    this.setState(state)\r\n  }\r\n  leftClickHandler = () => {\r\n    const state = { ...this.state }\r\n\r\n    state.lastShowingElement = state.firstShowingElement\r\n\r\n    state.firstShowingElement =\r\n      state.firstShowingElement - state.numberToSkip < state.leftBoundary\r\n        ? state.leftBoundary\r\n        : state.lastShowingElement - state.numberToSkip\r\n    const prevValue = Number(state.translateXState.slice(0, -1))\r\n    const moveSize = state.numberToSkip * state.elementLengthInPersent\r\n    console.log(moveSize, moveSize + prevValue, prevValue)\r\n    state.translateXState = `${moveSize + prevValue}%`\r\n    this.setState(state)\r\n  }\r\n  private episodeInCurrentRange = (episodeNum: number) => {\r\n    return (\r\n      episodeNum >= this.state.firstShowingElement &&\r\n      episodeNum <= this.state.lastShowingElement\r\n    )\r\n  }\r\n  private IsInvalid = (episodeNum: number) => {\r\n    return (\r\n      episodeNum > this.state.rightBoundary ||\r\n      episodeNum < this.state.leftBoundary\r\n    )\r\n  }\r\n  inputChangeHandler = ({ target }: { target: HTMLInputElement }) => {\r\n    let state = { ...this.state }\r\n    let episodes = this.props.episodes\r\n    const episodeNum: number = Number.parseInt(target.value)\r\n    if (this.IsInvalid(episodeNum)) {\r\n      return\r\n    }\r\n    const episode = episodes.find(\r\n      (episode) => episode.episodeNumber === episodeNum,\r\n    )\r\n\r\n    if (this.episodeInCurrentRange(episodeNum)) {\r\n      console.log(this.props.episodes, episode)\r\n      if (typeof episode !== 'undefined') this.props.onSelect(episode)\r\n      return\r\n    }\r\n    let steps = 1\r\n    if (episodeNum > state.lastShowingElement) {\r\n      console.log(episodeNum, state.lastShowingElement)\r\n      while (state.lastShowingElement < episodeNum) {\r\n        steps++\r\n        state.firstShowingElement += state.numberToSkip\r\n        state.lastShowingElement =\r\n          state.lastShowingElement + state.numberToSkip > state.rightBoundary\r\n            ? state.rightBoundary\r\n            : state.lastShowingElement + state.numberToSkip\r\n      }\r\n      const prevValue = Number(state.translateXState.slice(0, -1))\r\n      const moveSize = -(\r\n        state.numberToSkip *\r\n        (steps - 1) *\r\n        state.elementLengthInPersent\r\n      )\r\n      console.log(moveSize, moveSize + prevValue, prevValue)\r\n      state.translateXState = `${moveSize + prevValue}%`\r\n    }\r\n    if (episodeNum < state.firstShowingElement) {\r\n      console.log(episodeNum, state.lastShowingElement)\r\n      while (episodeNum < state.firstShowingElement) {\r\n        steps++\r\n        state.lastShowingElement = state.firstShowingElement\r\n\r\n        state.firstShowingElement =\r\n          state.firstShowingElement - state.numberToSkip < state.leftBoundary\r\n            ? state.leftBoundary\r\n            : state.lastShowingElement - state.numberToSkip\r\n      }\r\n      const prevValue = Number(state.translateXState.slice(0, -1))\r\n      const moveSize =\r\n        state.numberToSkip * (steps - 1) * state.elementLengthInPersent\r\n      state.translateXState = `${moveSize + prevValue}%`\r\n    }\r\n    this.setState(state)\r\n  }\r\n  render() {\r\n    const episodes = this.props.episodes\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.containerFlex}>\r\n          <div className={styles.episodeSelect}>\r\n            <div className={styles.episodeSelectText}>Серия №</div>\r\n            <input\r\n              onChange={this.inputChangeHandler}\r\n              className={styles.episodeSelectInput}\r\n              type=\"number\"\r\n              min={this.state.leftBoundary}\r\n              max={this.state.rightBoundary}\r\n            />\r\n          </div>\r\n          <div className={styles.episodeText}>Серия</div>\r\n          <div ref={this.showingContainer} className={styles.btnContainer}>\r\n            <div\r\n              style={{ transform: `translateX(${this.state.translateXState})` }}\r\n              ref={this.episodesContainer}\r\n              className={styles.btns}\r\n            >\r\n              {episodes.map((episode) => (\r\n                <div\r\n                  onClick={() => this.props.onSelect(episode)}\r\n                  ref={this.episode}\r\n                  className={\r\n                    this.props.selectedEpisode === episode\r\n                      ? styles.btnActive\r\n                      : styles.btn\r\n                  }\r\n                >\r\n                  {episode.episodeNumber}\r\n                </div>\r\n              ))}\r\n            </div>\r\n          </div>\r\n\r\n          <div className={styles.changeBtnFlexContainer}>\r\n            <button\r\n              disabled={\r\n                this.state.firstShowingElement <= this.state.leftBoundary\r\n              }\r\n              onClick={() => {\r\n                this.leftClickHandler()\r\n              }}\r\n              className={styles.changeBtnLeft}\r\n            >\r\n              <svg\r\n                className={styles.svg}\r\n                width={35}\r\n                height={35}\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M15.41 16.09l-4.58-4.59 4.58-4.59L14 5.5l-6 6 6 6z\"></path>\r\n                <path d=\"M0-.5h24v24H0z\" fill=\"none\"></path>\r\n              </svg>\r\n            </button>\r\n            <button\r\n              disabled={\r\n                this.state.lastShowingElement >= this.state.rightBoundary\r\n              }\r\n              onClick={() => {\r\n                this.rightClickHandler()\r\n              }}\r\n              className={styles.changeBtnRight}\r\n            >\r\n              <svg\r\n                className={styles.svg}\r\n                width={35}\r\n                height={35}\r\n                viewBox=\"0 0 24 24\"\r\n              >\r\n                <path d=\"M8.59 16.34l4.58-4.59-4.58-4.59L10 5.75l6 6-6 6z\"></path>\r\n                <path d=\"M0-.25h24v24H0z\" fill=\"none\"></path>\r\n              </svg>\r\n            </button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default EpisodeSelect\r\n"]},"metadata":{},"sourceType":"module"}