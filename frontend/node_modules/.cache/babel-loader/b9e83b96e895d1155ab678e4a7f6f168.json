{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nimport { apiCallBegan } from \"../actions/api\";\nimport filterToApi from \"./../../helperFunctions/FilterToApi\";\nconst initialState = {\n  topRaited: []\n};\nexport const titleSlice = createSlice({\n  name: \"titleBases\",\n  initialState,\n  reducers: {\n    titlesRecevied: (state, action) => {\n      let receviedTitles = [...action.payload];\n      state.topRaited = receviedTitles;\n    }\n  }\n});\nexport default titleSlice.reducer;\nexport const {\n  titlesRecevied\n} = titleSlice.actions;\nconst test = {\n  filterBy: \"name\",\n  generes: [{\n    id: \"5f21cff0be1c26a030a74cc5\",\n    name: \"nvm\"\n  }],\n  titleType: {\n    id: \"12\",\n    name: \"OVA\"\n  },\n  titleStatus: {\n    id: \"12\",\n    name: \"Finished\"\n  },\n  yearRange: {\n    from: new Date(2012, 12, 12),\n    to: new Date(2012, 12, 12)\n  }\n};\nexport const loadTitleBases = () => {\n  return apiCallBegan({\n    url: \"/titleBases\",\n    onSuccess: titleSlice.actions.titlesRecevied.type,\n    params: filterToApi(test)\n  });\n};","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/store/slices/TitleSlice.ts"],"names":["createSlice","apiCallBegan","filterToApi","initialState","topRaited","titleSlice","name","reducers","titlesRecevied","state","action","receviedTitles","payload","reducer","actions","test","filterBy","generes","id","titleType","titleStatus","yearRange","from","Date","to","loadTitleBases","url","onSuccess","type","params"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AAKA,OAAOC,WAAP,MAAwB,qCAAxB;AAMA,MAAMC,YAAiC,GAAG;AAAEC,EAAAA,SAAS,EAAE;AAAb,CAA1C;AACA,OAAO,MAAMC,UAAU,GAAGL,WAAW,CAAC;AACpCM,EAAAA,IAAI,EAAE,YAD8B;AAEpCH,EAAAA,YAFoC;AAGpCI,EAAAA,QAAQ,EAAE;AACRC,IAAAA,cAAc,EAAE,CAACC,KAAD,EAAQC,MAAR,KAAmB;AACjC,UAAIC,cAAiC,GAAG,CAAC,GAAGD,MAAM,CAACE,OAAX,CAAxC;AACAH,MAAAA,KAAK,CAACL,SAAN,GAAkBO,cAAlB;AACD;AAJO;AAH0B,CAAD,CAA9B;AAWP,eAAeN,UAAU,CAACQ,OAA1B;AACA,OAAO,MAAM;AAAEL,EAAAA;AAAF,IAAqBH,UAAU,CAACS,OAAtC;AAEP,MAAMC,IAAkB,GAAG;AACzBC,EAAAA,QAAQ,EAAE,MADe;AAEzBC,EAAAA,OAAO,EAAE,CAAC;AAAEC,IAAAA,EAAE,EAAE,0BAAN;AAAkCZ,IAAAA,IAAI,EAAE;AAAxC,GAAD,CAFgB;AAGzBa,EAAAA,SAAS,EAAE;AAAED,IAAAA,EAAE,EAAE,IAAN;AAAYZ,IAAAA,IAAI,EAAE;AAAlB,GAHc;AAIzBc,EAAAA,WAAW,EAAE;AAAEF,IAAAA,EAAE,EAAE,IAAN;AAAYZ,IAAAA,IAAI,EAAE;AAAlB,GAJY;AAKzBe,EAAAA,SAAS,EAAE;AAAEC,IAAAA,IAAI,EAAE,IAAIC,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB,CAAR;AAAgCC,IAAAA,EAAE,EAAE,IAAID,IAAJ,CAAS,IAAT,EAAe,EAAf,EAAmB,EAAnB;AAApC;AALc,CAA3B;AAQA,OAAO,MAAME,cAAc,GAAG,MAAM;AAClC,SAAOxB,YAAY,CAAC;AAClByB,IAAAA,GAAG,EAAE,aADa;AAElBC,IAAAA,SAAS,EAAEtB,UAAU,CAACS,OAAX,CAAmBN,cAAnB,CAAkCoB,IAF3B;AAGlBC,IAAAA,MAAM,EAAE3B,WAAW,CAACa,IAAD;AAHD,GAAD,CAAnB;AAKD,CANM","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apiCallBegan } from \"../actions/api\";\r\nimport { ITitleBase } from \"../../Interfaceses/ITitleBase\";\r\nimport { store } from \"../store\";\r\nimport { stat } from \"fs\";\r\nimport { ITitleFilter } from \"./../../Interfaceses/ITitleFilter\";\r\nimport filterToApi from \"./../../helperFunctions/FilterToApi\";\r\n\r\ninterface TitleBaseSliceState {\r\n  topRaited: Array<ITitleBase>;\r\n}\r\n\r\nconst initialState: TitleBaseSliceState = { topRaited: [] };\r\nexport const titleSlice = createSlice({\r\n  name: \"titleBases\",\r\n  initialState,\r\n  reducers: {\r\n    titlesRecevied: (state, action) => {\r\n      let receviedTitles: Array<ITitleBase> = [...action.payload];\r\n      state.topRaited = receviedTitles;\r\n    },\r\n  },\r\n});\r\n\r\nexport default titleSlice.reducer;\r\nexport const { titlesRecevied } = titleSlice.actions;\r\n\r\nconst test: ITitleFilter = {\r\n  filterBy: \"name\",\r\n  generes: [{ id: \"5f21cff0be1c26a030a74cc5\", name: \"nvm\" }],\r\n  titleType: { id: \"12\", name: \"OVA\" },\r\n  titleStatus: { id: \"12\", name: \"Finished\" },\r\n  yearRange: { from: new Date(2012, 12, 12), to: new Date(2012, 12, 12) },\r\n};\r\n\r\nexport const loadTitleBases = () => {\r\n  return apiCallBegan({\r\n    url: \"/titleBases\",\r\n    onSuccess: titleSlice.actions.titlesRecevied.type,\r\n    params: filterToApi(test),\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}