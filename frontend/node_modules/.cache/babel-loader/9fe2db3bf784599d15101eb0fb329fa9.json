{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\basicComponents\\\\select.tsx\";\nimport * as React from 'react';\n\nclass Select extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      selectedData: []\n    };\n\n    this.onSelect = selectedElement => {\n      const selectedData = { ...this.state.selectedData\n      };\n      this.state.selectedData.includes(selectedElement) ? selectedData.filter(element => element != selectedElement) : selectedData.push(selectedElement);\n      this.setState({\n        selectedData\n      });\n      this.props.onChange(selectedData);\n    };\n  }\n\n  render() {\n    const {\n      data\n    } = { ...this.props\n    };\n    const test = data.map(selectedElement => {\n      ;\n\n      /*#__PURE__*/\n      React.createElement(\"option\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 8\n        }\n      }, /*#__PURE__*/React.createElement(\"input\", {\n        type: \"`checkbox`\",\n        onChange: () => {\n          this.onSelect(selectedElement);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 9\n        }\n      }));\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"select\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }\n    }, test));\n  }\n\n}\n\nexport default Select;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/basicComponents/select.tsx"],"names":["React","Select","Component","state","selectedData","onSelect","selectedElement","includes","filter","element","push","setState","props","onChange","render","data","test","map"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;;AAcA,MAAMC,MAAN,SAAqBD,KAAK,CAACE,SAA3B,CAA+D;AAAA;AAAA;AAAA,SAC7DC,KAD6D,GACxC;AAAEC,MAAAA,YAAY,EAAE;AAAhB,KADwC;;AAAA,SAErDC,QAFqD,GAEzCC,eAAD,IAAkC;AACnD,YAAMF,YAAY,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,OAArB;AAEA,WAAKD,KAAL,CAAWC,YAAX,CAAwBG,QAAxB,CAAiCD,eAAjC,IACIF,YAAY,CAACI,MAAb,CAAqBC,OAAD,IAAaA,OAAO,IAAIH,eAA5C,CADJ,GAEIF,YAAY,CAACM,IAAb,CAAkBJ,eAAlB,CAFJ;AAIA,WAAKK,QAAL,CAAc;AAAEP,QAAAA;AAAF,OAAd;AACA,WAAKQ,KAAL,CAAWC,QAAX,CAAoBT,YAApB;AACD,KAX4D;AAAA;;AAa7DU,EAAAA,MAAM,GAAG;AACP,UAAM;AAAEC,MAAAA;AAAF,QAAW,EAAE,GAAG,KAAKH;AAAV,KAAjB;AACA,UAAMI,IAAS,GAAGD,IAAI,CAACE,GAAL,CAAUX,eAAD,IAAqB;AAC9C;;AAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACC;AACE,QAAA,IAAI,EAAC,YADP;AAEE,QAAA,QAAQ,EAAE,MAAM;AACd,eAAKD,QAAL,CAAcC,eAAd;AACD,SAJH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADD;AAQF,KATiB,CAAlB;AAUA,wBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASU,IAAT,CADF,CADF;AAKD;;AA9B4D;;AAiC/D,eAAef,MAAf","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { ISelectData } from './../../Interfaceses/ISelectData'\r\nimport { ISelectOnChange } from './../../Interfaceses/ISelectOnChange'\r\n\r\nexport interface SelectProps {\r\n  data: Array<ISelectData>\r\n  onChange: ISelectOnChange\r\n}\r\n\r\nexport interface SelectState {\r\n  selectedData: Array<ISelectData>\r\n}\r\n\r\nclass Select extends React.Component<SelectProps, SelectState> {\r\n  state: SelectState = { selectedData: [] }\r\n  private onSelect = (selectedElement: ISelectData) => {\r\n    const selectedData = { ...this.state.selectedData }\r\n\r\n    this.state.selectedData.includes(selectedElement)\r\n      ? selectedData.filter((element) => element != selectedElement)\r\n      : selectedData.push(selectedElement)\r\n\r\n    this.setState({ selectedData })\r\n    this.props.onChange(selectedData)\r\n  }\r\n\r\n  render() {\r\n    const { data } = { ...this.props }\r\n    const test: any = data.map((selectedElement) => {\r\n      ;<option>\r\n        <input\r\n          type=\"`checkbox`\"\r\n          onChange={() => {\r\n            this.onSelect(selectedElement)\r\n          }}\r\n        />\r\n      </option>\r\n    })\r\n    return (\r\n      <div>\r\n        <select>{test}</select>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Select\r\n"]},"metadata":{},"sourceType":"module"}