{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\basicComponents\\\\infoElement.tsx\";\nimport * as React from 'react';\nimport styles from './../../styles/infoElement.module.css';\n\nclass InfdElement extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.infoRender = data => {\n      if (typeof data === 'string' || typeof data === 'number') return this.oneElementRender(data);\n\n      if (myValue.hasOwnProperty('isWindowsUser')) {// do something cool\n      }\n    };\n\n    this.isStringArray = data => {\n      let somethingIsNotString = false;\n      data.forEach(item => {\n        if (typeof item !== 'string') {\n          return false;\n        }\n      });\n      return true;\n    };\n\n    this.oneElementRender = element => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementListFlex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.dataContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }\n      }, element)));\n    };\n\n    this.multiElementsRender = elements => {\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementListFlex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, elements.slice(0, -1).map(element => /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }\n      }, `${element},`)), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }\n      }, elements[elements.length - 1])));\n    };\n  }\n\n  render() {\n    const infoElement = { ...this.props\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.elementName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }\n    }, infoElement.name), this.infoRender(infoElement.info)));\n  }\n\n}\n\nexport default InfdElement;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/basicComponents/infoElement.tsx"],"names":["React","styles","InfdElement","Component","infoRender","data","oneElementRender","myValue","hasOwnProperty","isStringArray","somethingIsNotString","forEach","item","element","elementList","elementListFlex","elementInfo","dataContainer","multiElementsRender","elements","slice","map","length","render","infoElement","props","container","flexContainer","elementName","name","info"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,uCAAnB;;AAUA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA8E;AAAA;AAAA;;AAAA,SACpEC,UADoE,GAE1EC,IADmB,IAEhB;AACH,UAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAAhD,EACE,OAAO,KAAKC,gBAAL,CAAsBD,IAAtB,CAAP;;AACF,UAAIE,OAAO,CAACC,cAAR,CAAuB,eAAvB,CAAJ,EAA6C,CAC3C;AACD;AACF,KAT2E;;AAAA,SAUpEC,aAVoE,GAUnDJ,IAAD,IAAyB;AAC/C,UAAIK,oBAAoB,GAAG,KAA3B;AACAL,MAAAA,IAAI,CAACM,OAAL,CAAcC,IAAD,IAAU;AACrB,YAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,iBAAO,KAAP;AACD;AACF,OAJD;AAKA,aAAO,IAAP;AACD,KAlB2E;;AAAA,SAmBpEN,gBAnBoE,GAmBhDO,OAAD,IAA8B;AACvD,0BACE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACa,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEb,MAAM,CAACc,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE;AAAK,QAAA,SAAS,EAAEd,MAAM,CAACe,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEf,MAAM,CAACgB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAuCJ,OAAvC,CADF,CAFF,CADF;AAQD,KA5B2E;;AAAA,SA6BpEK,mBA7BoE,GA6B7CC,QAAD,IAAsC;AAClE,0BACE;AAAK,QAAA,SAAS,EAAElB,MAAM,CAACa,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEb,MAAM,CAACc,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGI,QAAQ,CAACC,KAAT,CAAe,CAAf,EAAkB,CAAC,CAAnB,EAAsBC,GAAtB,CAA2BR,OAAD,iBACzB;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACe,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,GAAEH,OAAQ,GAAhD,CADD,CADH,eAIE;AAAK,QAAA,SAAS,EAAEZ,MAAM,CAACe,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGG,QAAQ,CAACA,QAAQ,CAACG,MAAT,GAAkB,CAAnB,CADX,CAJF,CADF,CADF;AAYD,KA1C2E;AAAA;;AA2C5EC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,EAAE,GAAG,KAAKC;AAAV,KAApB;AACA,wBACE;AAAK,MAAA,SAAS,EAAExB,MAAM,CAACyB,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEzB,MAAM,CAAC0B,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAE1B,MAAM,CAAC2B,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCJ,WAAW,CAACK,IAAjD,CADF,EAEG,KAAKzB,UAAL,CAAgBoB,WAAW,CAACM,IAA5B,CAFH,CADF,CADF;AAQD;;AArD2E;;AAwD9E,eAAe5B,WAAf","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport styles from './../../styles/infoElement.module.css'\r\nimport { DropdownDivider } from 'react-bootstrap/Dropdown'\r\nimport { IInfoElement } from './../../Interfaceses/IInfoElement'\r\nexport interface InfoElementProps {\r\n  name: string\r\n  info: string | Array<string> | number | Array<IInfoElement>\r\n}\r\n\r\nexport interface InfoElementState {}\r\n\r\nclass InfdElement extends React.Component<InfoElementProps, InfoElementState> {\r\n  private infoRender = (\r\n    data: string | Array<string> | number | Array<IInfoElement>,\r\n  ) => {\r\n    if (typeof data === 'string' || typeof data === 'number')\r\n      return this.oneElementRender(data)\r\n    if (myValue.hasOwnProperty('isWindowsUser')) {\r\n      // do something cool\r\n    }\r\n  }\r\n  private isStringArray = (data: Array<string>) => {\r\n    let somethingIsNotString = false\r\n    data.forEach((item) => {\r\n      if (typeof item !== 'string') {\r\n        return false\r\n      }\r\n    })\r\n    return true\r\n  }\r\n  private oneElementRender = (element: string | number) => {\r\n    return (\r\n      <div className={styles.elementList}>\r\n        <div className={styles.elementListFlex}></div>\r\n        <div className={styles.elementInfo}>\r\n          <div className={styles.dataContainer}>{element}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  private multiElementsRender = (elements: Array<string | number>) => {\r\n    return (\r\n      <div className={styles.elementList}>\r\n        <div className={styles.elementListFlex}>\r\n          {elements.slice(0, -1).map((element: string | number) => (\r\n            <div className={styles.elementInfo}>{`${element},`}</div>\r\n          ))}\r\n          <div className={styles.elementInfo}>\r\n            {elements[elements.length - 1]}\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    const infoElement = { ...this.props }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.flexContainer}>\r\n          <div className={styles.elementName}>{infoElement.name}</div>\r\n          {this.infoRender(infoElement.info)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfdElement\r\n"]},"metadata":{},"sourceType":"module"}