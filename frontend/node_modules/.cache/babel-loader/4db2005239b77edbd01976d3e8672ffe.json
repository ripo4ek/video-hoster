{"ast":null,"code":"import axios from \"axios\";\nimport * as actions from \"../actions/api\";\nimport { EnhancedStore } from \"@reduxjs/toolkit\";\nimport { store } from \"../store\";\nimport queryString from \"query-string\";\n\nconst api = store => next => async action => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n  next(action);\n  const {\n    url,\n    method,\n    data,\n    onSuccess,\n    onError,\n    params\n  } = action.payload;\n\n  try {\n    const responce = await axios.request({\n      baseURL: process.env.REACT_APP_API,\n      url,\n      method,\n      data,\n      params\n    });\n    store.dispatch(actions.apiCallSuccess(responce.data));\n    if (onSuccess) store.dispatch({\n      type: onSuccess,\n      payload: responce.data\n    });\n  } catch (error) {\n    store.dispatch(actions.apiCallFailed(error));\n    if (onError) store.dispatch({\n      type: onError,\n      payload: error\n    });\n  }\n};\n\nexport default api;","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/store/middleware/api.js"],"names":["axios","actions","EnhancedStore","store","queryString","api","next","action","type","apiCallBegan","url","method","data","onSuccess","onError","params","payload","responce","request","baseURL","process","env","REACT_APP_API","dispatch","apiCallSuccess","error","apiCallFailed"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,KAAKC,OAAZ,MAAyB,gBAAzB;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,KAAT,QAAsB,UAAtB;AACA,OAAOC,WAAP,MAAwB,cAAxB;;AAEA,MAAMC,GAAG,GAAIF,KAAD,IAAYG,IAAD,IAAU,MAAOC,MAAP,IAAkB;AACjD,MAAIA,MAAM,CAACC,IAAP,KAAgBP,OAAO,CAACQ,YAAR,CAAqBD,IAAzC,EAA+C,OAAOF,IAAI,CAACC,MAAD,CAAX;AAE/CD,EAAAA,IAAI,CAACC,MAAD,CAAJ;AACA,QAAM;AAAEG,IAAAA,GAAF;AAAOC,IAAAA,MAAP;AAAeC,IAAAA,IAAf;AAAqBC,IAAAA,SAArB;AAAgCC,IAAAA,OAAhC;AAAyCC,IAAAA;AAAzC,MAAoDR,MAAM,CAACS,OAAjE;;AACA,MAAI;AACF,UAAMC,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,OAAN,CAAc;AACnCC,MAAAA,OAAO,EAAEC,OAAO,CAACC,GAAR,CAAYC,aADc;AAEnCZ,MAAAA,GAFmC;AAGnCC,MAAAA,MAHmC;AAInCC,MAAAA,IAJmC;AAKnCG,MAAAA;AALmC,KAAd,CAAvB;AAOAZ,IAAAA,KAAK,CAACoB,QAAN,CAAetB,OAAO,CAACuB,cAAR,CAAuBP,QAAQ,CAACL,IAAhC,CAAf;AACA,QAAIC,SAAJ,EAAeV,KAAK,CAACoB,QAAN,CAAe;AAAEf,MAAAA,IAAI,EAAEK,SAAR;AAAmBG,MAAAA,OAAO,EAAEC,QAAQ,CAACL;AAArC,KAAf;AAChB,GAVD,CAUE,OAAOa,KAAP,EAAc;AACdtB,IAAAA,KAAK,CAACoB,QAAN,CAAetB,OAAO,CAACyB,aAAR,CAAsBD,KAAtB,CAAf;AAEA,QAAIX,OAAJ,EAAaX,KAAK,CAACoB,QAAN,CAAe;AAAEf,MAAAA,IAAI,EAAEM,OAAR;AAAiBE,MAAAA,OAAO,EAAES;AAA1B,KAAf;AACd;AACF,CApBD;;AAsBA,eAAepB,GAAf","sourcesContent":["import axios from \"axios\";\r\nimport * as actions from \"../actions/api\";\r\nimport { EnhancedStore } from \"@reduxjs/toolkit\";\r\nimport { store } from \"../store\";\r\nimport queryString from \"query-string\";\r\n\r\nconst api = (store) => (next) => async (action) => {\r\n  if (action.type !== actions.apiCallBegan.type) return next(action);\r\n\r\n  next(action);\r\n  const { url, method, data, onSuccess, onError, params } = action.payload;\r\n  try {\r\n    const responce = await axios.request({\r\n      baseURL: process.env.REACT_APP_API,\r\n      url,\r\n      method,\r\n      data,\r\n      params,\r\n    });\r\n    store.dispatch(actions.apiCallSuccess(responce.data));\r\n    if (onSuccess) store.dispatch({ type: onSuccess, payload: responce.data });\r\n  } catch (error) {\r\n    store.dispatch(actions.apiCallFailed(error));\r\n\r\n    if (onError) store.dispatch({ type: onError, payload: error });\r\n  }\r\n};\r\n\r\nexport default api;\r\n"]},"metadata":{},"sourceType":"module"}