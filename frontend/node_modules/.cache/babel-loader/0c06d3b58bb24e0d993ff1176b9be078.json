{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\test.tsx\";\nimport * as React from \"react\";\nimport { CSSTransition } from \"react-transition-group\";\n\nfunction Test() {\n  const [inProp, setInProp] = React.useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CSSTransition, {\n    in: inProp,\n    timeout: 200,\n    classNames: \"my-node\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, \"I'll receive my-node-* classes\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: () => setInProp(true),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }\n  }, \"Click to Enter\"));\n}\n\nexport default Test;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/test.tsx"],"names":["React","CSSTransition","Test","inProp","setInProp","useState"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,SAASC,aAAT,QAA8B,wBAA9B;;AASA,SAASC,IAAT,GAAgB;AACd,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBJ,KAAK,CAACK,QAAN,CAAe,KAAf,CAA5B;AACA,sBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AAAe,IAAA,EAAE,EAAEF,MAAnB;AAA2B,IAAA,OAAO,EAAE,GAApC;AAAyC,IAAA,UAAU,EAAC,SAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAM,gCAAN,CADF,CADF,eAIE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,OAAO,EAAE,MAAMC,SAAS,CAAC,IAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAJF,CADF;AAUD;;AAED,eAAeF,IAAf","sourcesContent":["import * as React from \"react\";\r\nimport { Component } from \"react\";\r\nimport { CSSTransition } from \"react-transition-group\";\r\n\r\nexport interface TestProps {}\r\n\r\nexport interface TestState {\r\n  showList: Boolean;\r\n  highlightedHobby: Boolean;\r\n}\r\n\r\nfunction Test() {\r\n  const [inProp, setInProp] = React.useState(false);\r\n  return (\r\n    <div>\r\n      <CSSTransition in={inProp} timeout={200} classNames=\"my-node\">\r\n        <div>{\"I'll receive my-node-* classes\"}</div>\r\n      </CSSTransition>\r\n      <button type=\"button\" onClick={() => setInProp(true)}>\r\n        Click to Enter\r\n      </button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Test;\r\n"]},"metadata":{},"sourceType":"module"}