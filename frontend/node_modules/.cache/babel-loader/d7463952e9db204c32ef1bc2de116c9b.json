{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\basicComponents\\\\infoElement.tsx\";\nimport * as React from 'react';\nimport styles from './../../styles/infoElement.module.css';\n\nclass InfdElement extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.infoRender = data => {\n      if (typeof data === 'string') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.elementInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 15,\n            columnNumber: 14\n          }\n        }, data);\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 7\n        }\n      }, data.slice(0, -1).map(element => /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 20,\n          columnNumber: 11\n        }\n      }, element)), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 9\n        }\n      }, data[data.length - 1]));\n    };\n  }\n\n  render() {\n    const infoElement = { ...this.props\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.elementName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, infoElement.name), this.infoRender(infoElement.info)));\n  }\n\n}\n\nexport default InfdElement;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/basicComponents/infoElement.tsx"],"names":["React","styles","InfdElement","Component","infoRender","data","elementInfo","elementList","slice","map","element","length","render","infoElement","props","container","flexContainer","elementName","name","info"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,uCAAnB;;AASA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA8E;AAAA;AAAA;;AAAA,SACpEC,UADoE,GACtDC,IAAD,IAAkC;AACrD,UAAI,OAAOA,IAAP,KAAgB,QAApB,EAA8B;AAC5B,4BAAO;AAAK,UAAA,SAAS,EAAEJ,MAAM,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCD,IAArC,CAAP;AACD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAEJ,MAAM,CAACM,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,IAAI,CAACG,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,EAAkBC,GAAlB,CAAuBC,OAAD,iBACrB;AAAK,QAAA,SAAS,EAAET,MAAM,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCI,OAArC,CADD,CADH,eAIE;AAAK,QAAA,SAAS,EAAET,MAAM,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCD,IAAI,CAACA,IAAI,CAACM,MAAL,GAAc,CAAf,CAAzC,CAJF,CADF;AAQD,KAb2E;AAAA;;AAc5EC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,EAAE,GAAG,KAAKC;AAAV,KAApB;AACA,wBACE;AAAK,MAAA,SAAS,EAAEb,MAAM,CAACc,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCJ,WAAW,CAACK,IAAjD,CADF,EAEG,KAAKd,UAAL,CAAgBS,WAAW,CAACM,IAA5B,CAFH,CADF,CADF;AAQD;;AAxB2E;;AA2B9E,eAAejB,WAAf","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport styles from './../../styles/infoElement.module.css'\r\nimport { DropdownDivider } from 'react-bootstrap/Dropdown'\r\nexport interface InfoElementProps {\r\n  name: string\r\n  info: string | Array<string>\r\n}\r\n\r\nexport interface InfoElementState {}\r\n\r\nclass InfdElement extends React.Component<InfoElementProps, InfoElementState> {\r\n  private infoRender = (data: string | Array<string>) => {\r\n    if (typeof data === 'string') {\r\n      return <div className={styles.elementInfo}>{data}</div>\r\n    }\r\n    return (\r\n      <div className={styles.elementList}>\r\n        {data.slice(0, -1).map((element) => (\r\n          <div className={styles.elementInfo}>{element}</div>\r\n        ))}\r\n        <div className={styles.elementInfo}>{data[data.length - 1]}</div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    const infoElement = { ...this.props }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.flexContainer}>\r\n          <div className={styles.elementName}>{infoElement.name}</div>\r\n          {this.infoRender(infoElement.info)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfdElement\r\n"]},"metadata":{},"sourceType":"module"}