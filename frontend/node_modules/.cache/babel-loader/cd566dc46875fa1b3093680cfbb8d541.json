{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\video-hoster\\\\frontend\\\\src\\\\components\\\\mainPage.tsx\";\nimport * as React from 'react';\nimport { Container, Row, Col } from 'react-bootstrap';\nimport TitleSlider from './titleSlider';\nimport TitleChunk from './titleChunk';\nimport TitleList from './titleList';\nimport TitleFilter from './titleFilter';\n\nclass MainPage extends React.Component {\n  render() {\n    return /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"h2\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 15\n      }\n    }, \"\\u0421\\u0435\\u0439\\u0447\\u0430\\u0441 \\u043D\\u0430 \\u044D\\u043A\\u0440\\u0430\\u043D\\u0430\\u0445\")), /*#__PURE__*/React.createElement(TitleSlider, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleChunk, {\n      titleChunk: chunk,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleChunk, {\n      titleChunk: chunk2,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleChunk, {\n      titleChunk: chunk3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }\n    }))), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      md: 8,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleList, {\n      preview: true,\n      elementsToShow: 5,\n      titleList: titleList,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Col, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(TitleFilter, {\n      preview: true,\n      filterData: filterData,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }\n    }))));\n  }\n\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    topRaitedTitleBases: state.titleBases.slice().sort((a, b) => a.userRating > b.userRating ? 1 : b.userRating > a.userRating ? -1 : 0).slice(0, 10),\n    lastUpdatedTitleBases: state.titleBases,\n    newAddedTitleBases: state.titleBases\n  };\n};\n\nconst mapDispatchToProps = (dispatch, ownProps) => ({\n  loadTitleBases: () => dispatch(loadTitleBasesSearch({\n    itemsToTake: 5000\n  }))\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage);\nexport default MainPage;","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/components/mainPage.tsx"],"names":["React","Container","Row","Col","TitleSlider","TitleChunk","TitleList","TitleFilter","MainPage","Component","render","chunk","chunk2","chunk3","titleList","filterData","mapStateToProps","state","ownProps","topRaitedTitleBases","titleBases","slice","sort","a","b","userRating","lastUpdatedTitleBases","newAddedTitleBases","mapDispatchToProps","dispatch","loadTitleBases","loadTitleBasesSearch","itemsToTake","connect"],"mappings":"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","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\nimport TitleSlider from './titleSlider'\r\nimport TitleChunk from './titleChunk'\r\nimport TitleList from './titleList'\r\nimport TitleFilter from './titleFilter'\r\nimport { IGenere } from './../Interfaceses/IGenere'\r\nimport { ITitleElement } from './../Interfaceses/ITitleElement'\r\nimport { ITitleList } from './../Interfaceses/ITitleList'\r\nimport { ITitleDropdownElement } from './../Interfaceses/ITitleDropdownElement'\r\nimport { ITitleChunk } from './../Interfaceses/ITitleChunk'\r\nimport { ITitleStatus } from './../Interfaceses/ITitleStatus'\r\nimport { IFilterData } from './../Interfaceses/IFilterData'\r\nimport { ITitleDropdownList } from './../Interfaceses/ITitleDropdownList'\r\nimport { ITitleBase } from './../Interfaceses/ITitleBase'\r\nimport * as Redux from 'redux'\r\n\r\nexport interface MainPageProps {}\r\n\r\ninterface ReduxMainPageProps {\r\n  topRaitedTitleBases?: Array<ITitleBase>\r\n  lastUpdatedTitleBases?: Array<ITitleBase>\r\n  newAddedTitleBases?: Array<ITitleBase>\r\n  goingTitleBases?: Array<ITitleBase>\r\n}\r\n\r\ninterface DispatchProps {\r\n  loadTitleBases?: () => void\r\n}\r\n\r\ntype Props = ReduxMainPageProps & DispatchProps & MainPageProps\r\n\r\nexport interface MainPageState {}\r\n\r\nclass MainPage extends React.Component<Props, MainPageState> {\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <h2>\r\n              <a>Сейчас на экранах</a>\r\n            </h2>\r\n            <TitleSlider />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <TitleChunk titleChunk={chunk} />\r\n          </Col>\r\n          <Col>\r\n            <TitleChunk titleChunk={chunk2} />\r\n          </Col>\r\n          <Col>\r\n            <TitleChunk titleChunk={chunk3} />\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col md={8}>\r\n            <TitleList preview elementsToShow={5} titleList={titleList} />\r\n          </Col>\r\n          <Col>\r\n            <TitleFilter preview filterData={filterData} />\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (\r\n  state: any,\r\n  ownProps: MainPageProps,\r\n): ReduxMainPageProps => {\r\n  return {\r\n    topRaitedTitleBases: state.titleBases\r\n      .slice()\r\n      .sort((a: ITitleBase, b: ITitleBase) =>\r\n        a.userRating > b.userRating ? 1 : b.userRating > a.userRating ? -1 : 0,\r\n      )\r\n      .slice(0, 10),\r\n    lastUpdatedTitleBases: state.titleBases,\r\n    newAddedTitleBases: state.titleBases,\r\n  }\r\n}\r\nconst mapDispatchToProps = (\r\n  dispatch: Redux.Dispatch<Redux.AnyAction>,\r\n  ownProps: TitleSliderProps,\r\n): DispatchProps => ({\r\n  loadTitleBases: () => dispatch(loadTitleBasesSearch({ itemsToTake: 5000 })),\r\n})\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MainPage)\r\n\r\nexport default MainPage\r\n"]},"metadata":{},"sourceType":"module"}