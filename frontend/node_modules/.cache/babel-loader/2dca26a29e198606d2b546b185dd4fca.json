{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\basicComponents\\\\infoElement.tsx\";\nimport * as React from 'react';\nimport styles from './../../styles/infoElement.module.css';\n\nclass InfdElement extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.infoRender = data => {\n      if (typeof data === 'string' || typeof data === 'number') {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.elementList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.elementListFlex,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 11\n          }\n        }), /*#__PURE__*/React.createElement(\"div\", {\n          className: styles.elementInfo,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 11\n          }\n        }, data));\n      }\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementList,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 7\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementListFlex,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 9\n        }\n      }, data.slice(0, -1).map(element => /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 13\n        }\n      }, `${element},`)), /*#__PURE__*/React.createElement(\"div\", {\n        className: styles.elementInfo,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }\n      }, data[data.length - 1])));\n    };\n  }\n\n  render() {\n    const infoElement = { ...this.props\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.elementName,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }\n    }, infoElement.name), this.infoRender(infoElement.info)));\n  }\n\n}\n\nexport default InfdElement;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/basicComponents/infoElement.tsx"],"names":["React","styles","InfdElement","Component","infoRender","data","elementList","elementListFlex","elementInfo","slice","map","element","length","render","infoElement","props","container","flexContainer","elementName","name","info"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAOC,MAAP,MAAmB,uCAAnB;;AASA,MAAMC,WAAN,SAA0BF,KAAK,CAACG,SAAhC,CAA8E;AAAA;AAAA;;AAAA,SACpEC,UADoE,GACtDC,IAAD,IAA2C;AAC9D,UAAI,OAAOA,IAAP,KAAgB,QAAhB,IAA4B,OAAOA,IAAP,KAAgB,QAAhD,EAA0D;AACxD,4BACE;AAAK,UAAA,SAAS,EAAEJ,MAAM,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE;AAAK,UAAA,SAAS,EAAEL,MAAM,CAACM,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF,eAEE;AAAK,UAAA,SAAS,EAAEN,MAAM,CAACO,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCH,IAArC,CAFF,CADF;AAMD;;AACD,0BACE;AAAK,QAAA,SAAS,EAAEJ,MAAM,CAACK,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE;AAAK,QAAA,SAAS,EAAEL,MAAM,CAACM,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGF,IAAI,CAACI,KAAL,CAAW,CAAX,EAAc,CAAC,CAAf,EAAkBC,GAAlB,CAAuBC,OAAD,iBACrB;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACO,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAsC,GAAEG,OAAQ,GAAhD,CADD,CADH,eAIE;AAAK,QAAA,SAAS,EAAEV,MAAM,CAACO,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAqCH,IAAI,CAACA,IAAI,CAACO,MAAL,GAAc,CAAf,CAAzC,CAJF,CADF,CADF;AAUD,KApB2E;AAAA;;AAqB5EC,EAAAA,MAAM,GAAG;AACP,UAAMC,WAAW,GAAG,EAAE,GAAG,KAAKC;AAAV,KAApB;AACA,wBACE;AAAK,MAAA,SAAS,EAAEd,MAAM,CAACe,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEf,MAAM,CAACgB,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEhB,MAAM,CAACiB,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAqCJ,WAAW,CAACK,IAAjD,CADF,EAEG,KAAKf,UAAL,CAAgBU,WAAW,CAACM,IAA5B,CAFH,CADF,CADF;AAQD;;AA/B2E;;AAkC9E,eAAelB,WAAf","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport styles from './../../styles/infoElement.module.css'\r\nimport { DropdownDivider } from 'react-bootstrap/Dropdown'\r\nexport interface InfoElementProps {\r\n  name: string\r\n  info: string | Array<string> | number\r\n}\r\n\r\nexport interface InfoElementState {}\r\n\r\nclass InfdElement extends React.Component<InfoElementProps, InfoElementState> {\r\n  private infoRender = (data: string | Array<string> | number) => {\r\n    if (typeof data === 'string' || typeof data === 'number') {\r\n      return (\r\n        <div className={styles.elementList}>\r\n          <div className={styles.elementListFlex}></div>\r\n          <div className={styles.elementInfo}>{data}</div>\r\n        </div>\r\n      )\r\n    }\r\n    return (\r\n      <div className={styles.elementList}>\r\n        <div className={styles.elementListFlex}>\r\n          {data.slice(0, -1).map((element) => (\r\n            <div className={styles.elementInfo}>{`${element},`}</div>\r\n          ))}\r\n          <div className={styles.elementInfo}>{data[data.length - 1]}</div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n  render() {\r\n    const infoElement = { ...this.props }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.flexContainer}>\r\n          <div className={styles.elementName}>{infoElement.name}</div>\r\n          {this.infoRender(infoElement.info)}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default InfdElement\r\n"]},"metadata":{},"sourceType":"module"}