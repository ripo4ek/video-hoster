{"ast":null,"code":"var _jsxFileName = \"C:\\\\project\\\\video-hoster\\\\src\\\\components\\\\titleFilter.tsx\";\nimport * as React from 'react';\nimport Nouislider from 'nouislider-react';\nimport styles from './../styles/titleFilter.module.css';\nimport Select from './Select';\nimport yearExtractor from './../helperFunctions/yearExtractor';\n\nclass TitleFilter extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      filter: {\n        yearRange: {\n          from: 1975,\n          to: 2020\n        },\n        generes: [],\n        titleType: null,\n        titleStatus: null\n      },\n      preview: false\n    };\n\n    this.handleGenreChange = selectedOption => {\n      const options = selectedOption;\n      const filter = { ...this.state.filter\n      };\n      filter.generes = options;\n      this.setState({\n        filter\n      });\n    };\n\n    this.handleStatusChange = selectedOption => {\n      const status = selectedOption;\n      const filter = { ...this.state.filter\n      };\n      filter.titleStatus = status;\n      this.setState({\n        filter\n      });\n    };\n\n    this.handleTypeChange = selectedOption => {\n      const type = selectedOption;\n      const filter = { ...this.state.filter\n      };\n      filter.titleType = type;\n      this.setState({\n        filter\n      });\n    };\n\n    this.slideHandler = data => {\n      const filter = { ...this.state.filter\n      };\n      filter.yearRange = yearExtractor(data);\n      this.setState({\n        filter\n      });\n    };\n  }\n\n  componentDidMount() {\n    const state = { ...this.state\n    };\n    const {\n      preview\n    } = { ...this.props\n    };\n    if (typeof preview !== 'undefined') state.preview = preview;\n    this.setState(state);\n  }\n\n  render() {\n    const filter = { ...this.state.filter\n    };\n    const filterData = { ...this.props.filterData\n    };\n    const sliderFormatter = {\n      to: function (value) {\n        return `Год ${Math.trunc(value)}`;\n      },\n      from: function (value) {\n        return parseInt(value);\n      }\n    };\n    let props = { ...this.props.filterData\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.flexContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.filterTitleContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      className: styles.filterTitle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 13\n      }\n    }, \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440\")), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.filterContainer,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.slider,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Nouislider, {\n      range: {\n        min: props.yearRange.from,\n        max: props.yearRange.to\n      },\n      start: [props.yearRange.from, props.yearRange.to],\n      pips: {\n        mode: 'range',\n        density: 5\n      },\n      connect: true,\n      format: sliderFormatter,\n      tooltips: true,\n      className: styles.sliderInfo,\n      onSlide: this.slideHandler,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    })), /*#__PURE__*/React.createElement(Select, {\n      options: filterData.types,\n      isMulti: false,\n      title: \"\\u0422\\u0438\\u043F\",\n      onChange: this.handleTypeChange,\n      placeHolder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0442\\u0438\\u043F\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      options: filterData.generes,\n      isMulti: true,\n      title: \"\\u0416\\u0430\\u043D\\u0440\\u044B\",\n      onChange: this.handleGenreChange,\n      placeHolder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0436\\u0430\\u043D\\u0440\\u044B\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Select, {\n      options: filterData.statuses,\n      isMulti: false,\n      title: \"\\u0421\\u0442\\u0430\\u0442\\u0443\\u0441\",\n      onChange: this.handleStatusChange,\n      placeHolder: \"\\u0412\\u044B\\u0431\\u0435\\u0440\\u0435\\u0442\\u0435 \\u0441\\u0442\\u0430\\u0442\\u0443\\u0441\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(\"button\", {\n      className: styles.button,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 13\n      }\n    }, \"\\u041F\\u043E\\u0438\\u0441\\u043A\"))));\n  }\n\n}\n\nexport default TitleFilter;","map":{"version":3,"sources":["C:/project/video-hoster/src/components/titleFilter.tsx"],"names":["React","Nouislider","styles","Select","yearExtractor","TitleFilter","Component","state","filter","yearRange","from","to","generes","titleType","titleStatus","preview","handleGenreChange","selectedOption","options","setState","handleStatusChange","status","handleTypeChange","type","slideHandler","data","componentDidMount","props","render","filterData","sliderFormatter","value","Math","trunc","parseInt","container","flexContainer","filterTitleContainer","filterTitle","filterContainer","slider","min","max","mode","density","sliderInfo","types","statuses","button"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAIA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AAIA,OAAOC,MAAP,MAAmB,UAAnB;AAIA,OAAOC,aAAP,MAA0B,oCAA1B;;AAYA,MAAMC,WAAN,SAA0BL,KAAK,CAACM,SAAhC,CAA8E;AAAA;AAAA;AAAA,SAC5EC,KAD4E,GAClD;AACxBC,MAAAA,MAAM,EAAE;AACNC,QAAAA,SAAS,EAAE;AACTC,UAAAA,IAAI,EAAE,IADG;AAETC,UAAAA,EAAE,EAAE;AAFK,SADL;AAKNC,QAAAA,OAAO,EAAE,EALH;AAMNC,QAAAA,SAAS,EAAE,IANL;AAONC,QAAAA,WAAW,EAAE;AAPP,OADgB;AAUxBC,MAAAA,OAAO,EAAE;AAVe,KADkD;;AAAA,SAoBpEC,iBApBoE,GAoB/CC,cAAD,IAAyB;AACnD,YAAMC,OAAO,GAAGD,cAAhB;AACA,YAAMT,MAAM,GAAG,EACb,GAAG,KAAKD,KAAL,CAAWC;AADD,OAAf;AAGAA,MAAAA,MAAM,CAACI,OAAP,GAAiBM,OAAjB;AACA,WAAKC,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KA3B2E;;AAAA,SA4BpEY,kBA5BoE,GA4B9CH,cAAD,IAAyB;AACpD,YAAMI,MAAM,GAAGJ,cAAf;AACA,YAAMT,MAAM,GAAG,EACb,GAAG,KAAKD,KAAL,CAAWC;AADD,OAAf;AAGAA,MAAAA,MAAM,CAACM,WAAP,GAAqBO,MAArB;AACA,WAAKF,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KAnC2E;;AAAA,SAoCpEc,gBApCoE,GAoChDL,cAAD,IAAyB;AAClD,YAAMM,IAAI,GAAGN,cAAb;AACA,YAAMT,MAAM,GAAG,EACb,GAAG,KAAKD,KAAL,CAAWC;AADD,OAAf;AAGAA,MAAAA,MAAM,CAACK,SAAP,GAAmBU,IAAnB;AACA,WAAKJ,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KA3C2E;;AAAA,SA4CpEgB,YA5CoE,GA4CpDC,IAAD,IAAyB;AAC9C,YAAMjB,MAAM,GAAG,EACb,GAAG,KAAKD,KAAL,CAAWC;AADD,OAAf;AAIAA,MAAAA,MAAM,CAACC,SAAP,GAAmBL,aAAa,CAACqB,IAAD,CAAhC;AACA,WAAKN,QAAL,CAAc;AAAEX,QAAAA;AAAF,OAAd;AACD,KAnD2E;AAAA;;AAa5EkB,EAAAA,iBAAiB,GAAG;AAClB,UAAMnB,KAAK,GAAG,EAAE,GAAG,KAAKA;AAAV,KAAd;AACA,UAAM;AAAEQ,MAAAA;AAAF,QAAc,EAAE,GAAG,KAAKY;AAAV,KAApB;AACA,QAAI,OAAOZ,OAAP,KAAmB,WAAvB,EAAoCR,KAAK,CAACQ,OAAN,GAAgBA,OAAhB;AAEpC,SAAKI,QAAL,CAAcZ,KAAd;AACD;;AAiCDqB,EAAAA,MAAM,GAAG;AACP,UAAMpB,MAAM,GAAG,EAAE,GAAG,KAAKD,KAAL,CAAWC;AAAhB,KAAf;AACA,UAAMqB,UAAU,GAAG,EAAE,GAAG,KAAKF,KAAL,CAAWE;AAAhB,KAAnB;AACA,UAAMC,eAAe,GAAG;AACtBnB,MAAAA,EAAE,EAAE,UAAUoB,KAAV,EAAyB;AAC3B,eAAQ,OAAMC,IAAI,CAACC,KAAL,CAAWF,KAAX,CAAkB,EAAhC;AACD,OAHqB;AAItBrB,MAAAA,IAAI,EAAE,UAAUqB,KAAV,EAAyB;AAC7B,eAAOG,QAAQ,CAACH,KAAD,CAAf;AACD;AANqB,KAAxB;AAQA,QAAIJ,KAAK,GAAG,EAAE,GAAG,KAAKA,KAAL,CAAWE;AAAhB,KAAZ;AACA,wBACE;AAAK,MAAA,SAAS,EAAE3B,MAAM,CAACiC,SAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAEjC,MAAM,CAACkC,aAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAElC,MAAM,CAACmC,oBAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAM,MAAA,SAAS,EAAEnC,MAAM,CAACoC,WAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8CADF,CADF,eAIE;AAAK,MAAA,SAAS,EAAEpC,MAAM,CAACqC,eAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE;AAAK,MAAA,SAAS,EAAErC,MAAM,CAACsC,MAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAEE,oBAAC,UAAD;AACE,MAAA,KAAK,EAAE;AAAEC,QAAAA,GAAG,EAAEd,KAAK,CAAClB,SAAN,CAAgBC,IAAvB;AAA6BgC,QAAAA,GAAG,EAAEf,KAAK,CAAClB,SAAN,CAAgBE;AAAlD,OADT;AAEE,MAAA,KAAK,EAAE,CAACgB,KAAK,CAAClB,SAAN,CAAgBC,IAAjB,EAAuBiB,KAAK,CAAClB,SAAN,CAAgBE,EAAvC,CAFT;AAGE,MAAA,IAAI,EAAE;AAAEgC,QAAAA,IAAI,EAAE,OAAR;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAHR;AAIE,MAAA,OAAO,EAAE,IAJX;AAKE,MAAA,MAAM,EAAEd,eALV;AAME,MAAA,QAAQ,EAAE,IANZ;AAOE,MAAA,SAAS,EAAE5B,MAAM,CAAC2C,UAPpB;AAQE,MAAA,OAAO,EAAE,KAAKrB,YARhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CADF,eAeE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEK,UAAU,CAACiB,KADtB;AAEE,MAAA,OAAO,EAAE,KAFX;AAGE,MAAA,KAAK,EAAC,oBAHR;AAIE,MAAA,QAAQ,EAAE,KAAKxB,gBAJjB;AAKE,MAAA,WAAW,EAAC,qEALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAfF,eAsBE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEO,UAAU,CAACjB,OADtB;AAEE,MAAA,OAAO,EAAE,IAFX;AAGE,MAAA,KAAK,EAAC,gCAHR;AAIE,MAAA,QAAQ,EAAE,KAAKI,iBAJjB;AAKE,MAAA,WAAW,EAAC,iFALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAtBF,eA6BE,oBAAC,MAAD;AACE,MAAA,OAAO,EAAEa,UAAU,CAACkB,QADtB;AAEE,MAAA,OAAO,EAAE,KAFX;AAGE,MAAA,KAAK,EAAC,sCAHR;AAIE,MAAA,QAAQ,EAAE,KAAK3B,kBAJjB;AAKE,MAAA,WAAW,EAAC,uFALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA7BF,eAoCE;AAAQ,MAAA,SAAS,EAAElB,MAAM,CAAC8C,MAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wCApCF,CAJF,CADF,CADF;AA+CD;;AA/G2E;;AAkH9E,eAAe3C,WAAf","sourcesContent":["import * as React from 'react'\r\nimport { Component } from 'react'\r\nimport { ITitleFilter } from './../Interfaceses/ITitleFilter'\r\nimport { IYearRange } from '../Interfaceses/IYearRange'\r\nimport Nouislider from 'nouislider-react'\r\nimport styles from './../styles/titleFilter.module.css'\r\nimport { ISelectData } from './../Interfaceses/ISelectData'\r\nimport { IGenere } from './../Interfaceses/IGenere'\r\nimport { IFilterData } from './../Interfaceses/IFilterData'\r\nimport Select from './Select'\r\nimport { ITitleStatus } from './../Interfaceses/ITitleStatus'\r\nimport { ITitleType } from './../Interfaceses/ITitleType'\r\nimport { stringify } from 'querystring'\r\nimport yearExtractor from './../helperFunctions/yearExtractor'\r\n\r\nexport interface TitleFilterProps {\r\n  filterData: IFilterData\r\n  preview?: boolean\r\n}\r\n\r\nexport interface TitleFilterState {\r\n  filter: ITitleFilter\r\n  preview: boolean\r\n}\r\n\r\nclass TitleFilter extends React.Component<TitleFilterProps, TitleFilterState> {\r\n  state: TitleFilterState = {\r\n    filter: {\r\n      yearRange: {\r\n        from: 1975,\r\n        to: 2020,\r\n      },\r\n      generes: [],\r\n      titleType: null,\r\n      titleStatus: null,\r\n    },\r\n    preview: false,\r\n  }\r\n  componentDidMount() {\r\n    const state = { ...this.state }\r\n    const { preview } = { ...this.props }\r\n    if (typeof preview !== 'undefined') state.preview = preview\r\n\r\n    this.setState(state)\r\n  }\r\n  private handleGenreChange = (selectedOption: any) => {\r\n    const options = selectedOption as Array<IGenere>\r\n    const filter = {\r\n      ...this.state.filter,\r\n    }\r\n    filter.generes = options\r\n    this.setState({ filter })\r\n  }\r\n  private handleStatusChange = (selectedOption: any) => {\r\n    const status = selectedOption as ITitleStatus\r\n    const filter = {\r\n      ...this.state.filter,\r\n    }\r\n    filter.titleStatus = status\r\n    this.setState({ filter })\r\n  }\r\n  private handleTypeChange = (selectedOption: any) => {\r\n    const type = selectedOption as ITitleType\r\n    const filter = {\r\n      ...this.state.filter,\r\n    }\r\n    filter.titleType = type\r\n    this.setState({ filter })\r\n  }\r\n  private slideHandler = (data: Array<string>) => {\r\n    const filter = {\r\n      ...this.state.filter,\r\n    }\r\n\r\n    filter.yearRange = yearExtractor(data)\r\n    this.setState({ filter })\r\n  }\r\n  render() {\r\n    const filter = { ...this.state.filter }\r\n    const filterData = { ...this.props.filterData }\r\n    const sliderFormatter = {\r\n      to: function (value: number) {\r\n        return `Год ${Math.trunc(value)}`\r\n      },\r\n      from: function (value: string) {\r\n        return parseInt(value)\r\n      },\r\n    }\r\n    let props = { ...this.props.filterData }\r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.flexContainer}>\r\n          <div className={styles.filterTitleContainer}>\r\n            <span className={styles.filterTitle}>Фильтр</span>\r\n          </div>\r\n          <div className={styles.filterContainer}>\r\n            <div className={styles.slider}>\r\n              {/* Styles in App.css */}\r\n              <Nouislider\r\n                range={{ min: props.yearRange.from, max: props.yearRange.to }}\r\n                start={[props.yearRange.from, props.yearRange.to]}\r\n                pips={{ mode: 'range', density: 5 }}\r\n                connect={true}\r\n                format={sliderFormatter}\r\n                tooltips={true}\r\n                className={styles.sliderInfo}\r\n                onSlide={this.slideHandler}\r\n              />\r\n            </div>\r\n\r\n            <Select\r\n              options={filterData.types}\r\n              isMulti={false}\r\n              title=\"Тип\"\r\n              onChange={this.handleTypeChange}\r\n              placeHolder=\"Выберете тип\"\r\n            />\r\n            <Select\r\n              options={filterData.generes}\r\n              isMulti={true}\r\n              title=\"Жанры\"\r\n              onChange={this.handleGenreChange}\r\n              placeHolder=\"Выберете жанры\"\r\n            />\r\n            <Select\r\n              options={filterData.statuses}\r\n              isMulti={false}\r\n              title=\"Статус\"\r\n              onChange={this.handleStatusChange}\r\n              placeHolder=\"Выберете статус\"\r\n            />\r\n            <button className={styles.button}>Поиск</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default TitleFilter\r\n"]},"metadata":{},"sourceType":"module"}