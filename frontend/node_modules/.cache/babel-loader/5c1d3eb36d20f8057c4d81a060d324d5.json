{"ast":null,"code":"import moment from \"moment\";\nimport \"moment/locale/ru\";\nexport default (entities => {\n  let result = [];\n  entities.forEach(element => {\n    const locale = moment(element.episodeReleaseTime).locale(\"ru\").format(\"dddd\");\n\n    if (result.length != 0 && result.filter(elementCat => elementCat.name === locale)) {\n      console.log(result.filter(elementCat => elementCat.name === locale) === true);\n      result.filter(elementCat => elementCat.name === locale)[0].titleElements.push(element);\n    } else {\n      result.push({\n        name: locale,\n        titleElements: [element]\n      });\n    }\n  });\n  return result;\n});","map":{"version":3,"sources":["C:/projects/video-hoster/frontend/src/helperFunctions/createChunk.ts"],"names":["moment","entities","result","forEach","element","locale","episodeReleaseTime","format","length","filter","elementCat","name","console","log","titleElements","push"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAIA,OAAO,kBAAP;AAIA,gBAAgBC,QAAD,IAA4B;AACzC,MAAIC,MAAiC,GAAG,EAAxC;AAEAD,EAAAA,QAAQ,CAACE,OAAT,CAAkBC,OAAD,IAAyB;AACxC,UAAMC,MAAM,GAAGL,MAAM,CAACI,OAAO,CAACE,kBAAT,CAAN,CACZD,MADY,CACL,IADK,EAEZE,MAFY,CAEL,MAFK,CAAf;;AAGA,QACEL,MAAM,CAACM,MAAP,IAAiB,CAAjB,IACAN,MAAM,CAACO,MAAP,CAAeC,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoBN,MAAlD,CAFF,EAGE;AACAO,MAAAA,OAAO,CAACC,GAAR,CACEX,MAAM,CAACO,MAAP,CAAeC,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoBN,MAAlD,MAA8D,IADhE;AAGAH,MAAAA,MAAM,CACHO,MADH,CACWC,UAAD,IAAgBA,UAAU,CAACC,IAAX,KAAoBN,MAD9C,EACsD,CADtD,EAEGS,aAFH,CAEiBC,IAFjB,CAEsBX,OAFtB;AAGD,KAVD,MAUO;AACLF,MAAAA,MAAM,CAACa,IAAP,CAAY;AAAEJ,QAAAA,IAAI,EAAEN,MAAR;AAAgBS,QAAAA,aAAa,EAAE,CAACV,OAAD;AAA/B,OAAZ;AACD;AACF,GAjBD;AAkBA,SAAOF,MAAP;AACD,CAtBD","sourcesContent":["import moment from \"moment\";\r\nimport _, { forEach } from \"underscore\";\r\nimport { ITitleBase } from \"./../Interfaceses/ITitleBase\";\r\nimport { ITitleDropdownList } from \"./../Interfaceses/ITitleDropdownList\";\r\nimport \"moment/locale/ru\";\r\n\r\nexport interface GroupEntity {}\r\n\r\nexport default (entities: ITitleBase[]) => {\r\n  let result: Array<ITitleDropdownList> = [];\r\n\r\n  entities.forEach((element: ITitleBase) => {\r\n    const locale = moment(element.episodeReleaseTime)\r\n      .locale(\"ru\")\r\n      .format(\"dddd\");\r\n    if (\r\n      result.length != 0 &&\r\n      result.filter((elementCat) => elementCat.name === locale)\r\n    ) {\r\n      console.log(\r\n        result.filter((elementCat) => elementCat.name === locale) === true\r\n      );\r\n      result\r\n        .filter((elementCat) => elementCat.name === locale)[0]\r\n        .titleElements.push(element);\r\n    } else {\r\n      result.push({ name: locale, titleElements: [element] });\r\n    }\r\n  });\r\n  return result;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}